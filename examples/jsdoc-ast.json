[
    {
        "comment": "",
        "meta": {
            "range": [
                14,
                106
            ],
            "filename": "default-access-controller.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000004",
                "name": "AccessController",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "AccessController",
        "longname": "AccessController",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                41,
                104
            ],
            "filename": "default-access-controller.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000007",
                "name": "AccessController#canAppend",
                "type": "MethodDefinition",
                "paramnames": [
                    "entry",
                    "identityProvider"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "canAppend",
        "longname": "AccessController#canAppend",
        "kind": "function",
        "memberof": "AccessController",
        "scope": "instance",
        "params": [],
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                108,
                141
            ],
            "filename": "default-access-controller.js",
            "lineno": 9,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000016",
                "name": "module.exports",
                "type": "Identifier",
                "value": "AccessController",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                49
            ],
            "filename": "entry-io.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000026",
                "name": "pWhilst",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pWhilst",
        "longname": "pWhilst",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                56,
                79
            ],
            "filename": "entry-io.js",
            "lineno": 4,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000032",
                "name": "pMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pMap",
        "longname": "pMap",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                86,
                112
            ],
            "filename": "entry-io.js",
            "lineno": 5,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000038",
                "name": "Entry",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Entry",
        "longname": "Entry",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                114,
                3131
            ],
            "filename": "entry-io.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000043",
                "name": "EntryIO",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "EntryIO",
        "longname": "EntryIO",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                166,
                690
            ],
            "filename": "entry-io.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000046",
                "name": "EntryIO.fetchParallel",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "hashes",
                    "length",
                    "exclude",
                    "concurrency",
                    "timeout",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "fetchParallel",
        "longname": "EntryIO.fetchParallel",
        "kind": "function",
        "memberof": "EntryIO",
        "scope": "static",
        "params": [],
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                284,
                379
            ],
            "filename": "entry-io.js",
            "lineno": 10,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000060",
                "name": "fetchOne",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "fetchOne",
        "longname": "<anonymous>~fetchOne",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                390,
                438
            ],
            "filename": "entry-io.js",
            "lineno": 11,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000075",
                "name": "concatArrays",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "concatArrays",
        "longname": "<anonymous>~concatArrays",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                449,
                496
            ],
            "filename": "entry-io.js",
            "lineno": 12,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000086",
                "name": "flatten",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "flatten",
        "longname": "<anonymous>~flatten",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                501,
                556
            ],
            "filename": "entry-io.js",
            "lineno": 13,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000097",
                "name": "concurrency",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "concurrency",
        "longname": "<anonymous>~concurrency",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                567,
                635
            ],
            "filename": "entry-io.js",
            "lineno": 14,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000110",
                "name": "entries",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entries",
        "longname": "<anonymous>~entries",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                608,
                632
            ],
            "filename": "entry-io.js",
            "lineno": 14,
            "columnno": 51,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000118",
                "name": "concurrency",
                "type": "Identifier",
                "value": "concurrency"
            }
        },
        "undocumented": true,
        "name": "concurrency",
        "longname": "concurrency",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Fetch log entries sequentially\n   *\n   * @param {IPFS} [ipfs] An IPFS instance\n   * @param {string} [hash] Multihash of the entry to fetch\n   * @param {string} [parent] Parent of the node to be fetched\n   * @param {Object} [all] Entries to skip\n   * @param {Number} [amount=-1] How many entries to fetch\n   * @param {Number} [depth=0] Current depth of the recursion\n   * @param {function(hash, entry, parent, depth)} onProgressCallback\n   * @returns {Promise<Array<Entry>>}\n   */",
        "meta": {
            "range": [
                1185,
                3129
            ],
            "filename": "entry-io.js",
            "lineno": 30,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000124",
                "name": "EntryIO.fetchAll",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "hashes",
                    "amount",
                    "exclude",
                    "timeout",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Fetch log entries sequentially",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "optional": true,
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "Multihash of the entry to fetch",
                "name": "hash"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "Parent of the node to be fetched",
                "name": "parent"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "description": "Entries to skip",
                "name": "all"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "optional": true,
                "defaultvalue": -1,
                "description": "How many entries to fetch",
                "name": "amount"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "optional": true,
                "defaultvalue": 0,
                "description": "Current depth of the recursion",
                "name": "depth"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "onProgressCallback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Array.<Entry>>"
                    ]
                }
            }
        ],
        "name": "fetchAll",
        "longname": "EntryIO.fetchAll",
        "kind": "function",
        "memberof": "EntryIO",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1290,
                1301
            ],
            "filename": "entry-io.js",
            "lineno": 31,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000139",
                "name": "result",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1310,
                1320
            ],
            "filename": "entry-io.js",
            "lineno": 32,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000143",
                "name": "cache",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "cache",
        "longname": "<anonymous>~cache",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1329,
                1405
            ],
            "filename": "entry-io.js",
            "lineno": 33,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000147",
                "name": "loadingQueue",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "loadingQueue",
        "longname": "<anonymous>~loadingQueue",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1461,
                1506
            ],
            "filename": "entry-io.js",
            "lineno": 38,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000162",
                "name": "addToLoadingQueue",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "addToLoadingQueue",
        "longname": "<anonymous>~addToLoadingQueue",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1574,
                1632
            ],
            "filename": "entry-io.js",
            "lineno": 41,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000172",
                "name": "exclude",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exclude",
        "longname": "<anonymous>~exclude",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1641,
                1760
            ],
            "filename": "entry-io.js",
            "lineno": 42,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000185",
                "name": "addToExcludeCache",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "cache[undefined]": "<anonymous>~cache.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToExcludeCache",
        "longname": "<anonymous>~addToExcludeCache",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1729,
                1746
            ],
            "filename": "entry-io.js",
            "lineno": 45,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000204",
                "name": "cache[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "e",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~cache.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~cache",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1811,
                1931
            ],
            "filename": "entry-io.js",
            "lineno": 50,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000218",
                "name": "shouldFetchMore",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "shouldFetchMore",
        "longname": "<anonymous>~shouldFetchMore",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1943,
                3059
            ],
            "filename": "entry-io.js",
            "lineno": 55,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000239",
                "name": "fetchEntry",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "hash": "<anonymous>~fetchEntry~hash",
                "": null
            }
        },
        "undocumented": true,
        "name": "fetchEntry",
        "longname": "<anonymous>~fetchEntry",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1976,
                2003
            ],
            "filename": "entry-io.js",
            "lineno": 56,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000244",
                "name": "hash",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hash",
        "longname": "<anonymous>~fetchEntry~hash",
        "kind": "constant",
        "memberof": "<anonymous>~fetchEntry",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2271,
                2480
            ],
            "filename": "entry-io.js",
            "lineno": 65,
            "columnno": 14,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000268",
                "name": "timer",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "timer",
        "longname": "<anonymous>~timer",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2496,
                2839
            ],
            "filename": "entry-io.js",
            "lineno": 72,
            "columnno": 14,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000293",
                "name": "addToResults",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "cache[undefined]": "<anonymous>~cache.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToResults",
        "longname": "<anonymous>~addToResults",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2685,
                2704
            ],
            "filename": "entry-io.js",
            "lineno": 77,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000324",
                "name": "cache[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "entry",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~cache.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~cache",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2897,
                2942
            ],
            "filename": "entry-io.js",
            "lineno": 86,
            "columnno": 16,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000343",
                "name": "entry",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entry",
        "longname": "<anonymous>~entry",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3133,
                3157
            ],
            "filename": "entry-io.js",
            "lineno": 100,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000373",
                "name": "module.exports",
                "type": "Identifier",
                "value": "EntryIO",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                54
            ],
            "filename": "entry.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000383",
                "name": "Clock",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Clock",
        "longname": "Clock",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                63,
                72
            ],
            "filename": "entry.js",
            "lineno": 4,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000391",
                "name": "isDefined",
                "type": "Identifier",
                "value": "isDefined"
            }
        },
        "undocumented": true,
        "name": "isDefined",
        "longname": "isDefined",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                103,
                169
            ],
            "filename": "entry.js",
            "lineno": 6,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000397",
                "name": "IpfsNotDefinedError",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "IpfsNotDefinedError",
        "longname": "IpfsNotDefinedError",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                171,
                6556
            ],
            "filename": "entry.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000403",
                "name": "Entry",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "Entry",
        "longname": "Entry",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Create an Entry\n   * @param {string|Buffer|Object|Array} data - Data of the entry to be added. Can be any JSON.stringifyable data.\n   * @param {Array<Entry|string>} [next=[]] Parents of the entry\n   * @example\n   * const entry = await Entry.create(ipfs, identity, 'hello')\n   * console.log(entry)\n   * // { hash: null, payload: \"hello\", next: [] }\n   * @returns {Promise<Entry>}\n   */",
        "meta": {
            "range": [
                583,
                1834
            ],
            "filename": "entry.js",
            "lineno": 19,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000406",
                "name": "Entry.create",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "identity",
                    "logId",
                    "data",
                    "next",
                    "clock"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create an Entry",
        "params": [
            {
                "type": {
                    "names": [
                        "string",
                        "Buffer",
                        "Object",
                        "Array"
                    ]
                },
                "description": "Data of the entry to be added. Can be any JSON.stringifyable data.",
                "name": "data"
            },
            {
                "type": {
                    "names": [
                        "Array.<(Entry|string)>"
                    ]
                },
                "optional": true,
                "defaultvalue": "[]",
                "description": "Parents of the entry",
                "name": "next"
            }
        ],
        "examples": [
            "const entry = await Entry.create(ipfs, identity, 'hello')\nconsole.log(entry)\n// { hash: null, payload: \"hello\", next: [] }"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Entry>"
                    ]
                }
            }
        ],
        "name": "create",
        "longname": "Entry.create",
        "kind": "function",
        "memberof": "Entry",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1094,
                1130
            ],
            "filename": "entry.js",
            "lineno": 27,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000470",
                "name": "toEntry",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "toEntry",
        "longname": "<anonymous>~toEntry",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1141,
                1184
            ],
            "filename": "entry.js",
            "lineno": 28,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000483",
                "name": "nexts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nexts",
        "longname": "<anonymous>~nexts",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1196,
                1574
            ],
            "filename": "entry.js",
            "lineno": 30,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000495",
                "name": "entry",
                "type": "ObjectExpression",
                "value": "{\"hash\":null,\"id\":\"\",\"payload\":\"\",\"next\":\"\",\"v\":0,\"clock\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "entry",
        "longname": "<anonymous>~entry",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1212,
                1222
            ],
            "filename": "entry.js",
            "lineno": 31,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000498",
                "name": "hash",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "hash",
        "longname": "<anonymous>~entry.hash",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1291,
                1300
            ],
            "filename": "entry.js",
            "lineno": 32,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000500",
                "name": "id",
                "type": "Identifier",
                "value": "logId"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "<anonymous>~entry.id",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1342,
                1355
            ],
            "filename": "entry.js",
            "lineno": 33,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000502",
                "name": "payload",
                "type": "Identifier",
                "value": "data"
            }
        },
        "undocumented": true,
        "name": "payload",
        "longname": "<anonymous>~entry.payload",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1401,
                1412
            ],
            "filename": "entry.js",
            "lineno": 34,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000504",
                "name": "next",
                "type": "Identifier",
                "value": "nexts"
            }
        },
        "undocumented": true,
        "name": "next",
        "longname": "<anonymous>~entry.next",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1444,
                1448
            ],
            "filename": "entry.js",
            "lineno": 35,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000506",
                "name": "v",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~entry.v",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1523,
                1568
            ],
            "filename": "entry.js",
            "lineno": 36,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000508",
                "name": "clock",
                "type": "LogicalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "clock",
        "longname": "<anonymous>~entry.clock",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1586,
                1659
            ],
            "filename": "entry.js",
            "lineno": 39,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000517",
                "name": "signature",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "signature",
        "longname": "<anonymous>~signature",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1664,
                1694
            ],
            "filename": "entry.js",
            "lineno": 40,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000533",
                "name": "entry.key",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "identity.publicKey",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "<anonymous>~entry.key",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1699,
                1733
            ],
            "filename": "entry.js",
            "lineno": 41,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000541",
                "name": "entry.identity",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "<anonymous>~entry.identity",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1738,
                1759
            ],
            "filename": "entry.js",
            "lineno": 42,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000550",
                "name": "entry.sig",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "signature",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sig",
        "longname": "<anonymous>~entry.sig",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1764,
                1813
            ],
            "filename": "entry.js",
            "lineno": 43,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000556",
                "name": "entry.hash",
                "type": "AwaitExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "hash",
        "longname": "<anonymous>~entry.hash",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Verifies an entry signature for a given key and sig\n   * @param  {Entry}  entry Entry to verify\n   * @return {Promise}      Returns a promise that resolves to a boolean value\n   * indicating if the entry signature is valid\n   */",
        "meta": {
            "range": [
                2078,
                2714
            ],
            "filename": "entry.js",
            "lineno": 53,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000569",
                "name": "Entry.verify",
                "type": "MethodDefinition",
                "paramnames": [
                    "identityProvider",
                    "entry"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Verifies an entry signature for a given key and sig",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "description": "Entry to verify",
                "name": "entry"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise"
                    ]
                },
                "description": "Returns a promise that resolves to a boolean value\nindicating if the entry signature is valid"
            }
        ],
        "name": "verify",
        "longname": "Entry.verify",
        "kind": "function",
        "memberof": "Entry",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2436,
                2633
            ],
            "filename": "entry.js",
            "lineno": 59,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000612",
                "name": "e",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2466,
                2476
            ],
            "filename": "entry.js",
            "lineno": 60,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000620",
                "name": "hash",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "hash",
        "longname": "hash",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2484,
                2496
            ],
            "filename": "entry.js",
            "lineno": 61,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000622",
                "name": "id",
                "type": "MemberExpression",
                "value": "entry.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2504,
                2526
            ],
            "filename": "entry.js",
            "lineno": 62,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000626",
                "name": "payload",
                "type": "MemberExpression",
                "value": "entry.payload"
            }
        },
        "undocumented": true,
        "name": "payload",
        "longname": "payload",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2534,
                2550
            ],
            "filename": "entry.js",
            "lineno": 63,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000630",
                "name": "next",
                "type": "MemberExpression",
                "value": "entry.next"
            }
        },
        "undocumented": true,
        "name": "next",
        "longname": "next",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2558,
                2568
            ],
            "filename": "entry.js",
            "lineno": 64,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000634",
                "name": "v",
                "type": "MemberExpression",
                "value": "entry.v"
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "v",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2576,
                2626
            ],
            "filename": "entry.js",
            "lineno": 65,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000638",
                "name": "clock",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "clock",
        "longname": "clock",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2718,
                2793
            ],
            "filename": "entry.js",
            "lineno": 71,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000667",
                "name": "Entry.toBuffer",
                "type": "MethodDefinition",
                "paramnames": [
                    "entry"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "toBuffer",
        "longname": "Entry.toBuffer",
        "kind": "function",
        "memberof": "Entry",
        "scope": "static",
        "params": []
    },
    {
        "comment": "/**\n   * Get the multihash of an Entry\n   * @param {IPFS} [ipfs] An IPFS instance\n   * @param {Entry} [entry] Entry to get a multihash for\n   * @example\n   * const hash = await Entry.toMultihash(ipfs, entry)\n   * console.log(hash)\n   * // \"Qm...Foo\"\n   * @returns {Promise<string>}\n   */",
        "meta": {
            "range": [
                3087,
                3920
            ],
            "filename": "entry.js",
            "lineno": 85,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000682",
                "name": "Entry.toMultihash",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "entry"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Get the multihash of an Entry",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "optional": true,
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "optional": true,
                "description": "Entry to get a multihash for",
                "name": "entry"
            }
        ],
        "examples": [
            "const hash = await Entry.toMultihash(ipfs, entry)\nconsole.log(hash)\n// \"Qm...Foo\""
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<string>"
                    ]
                }
            }
        ],
        "name": "toMultihash",
        "longname": "Entry.toMultihash",
        "kind": "function",
        "memberof": "Entry",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3181,
                3281
            ],
            "filename": "entry.js",
            "lineno": 87,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000695",
                "name": "isValidEntryObject",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "isValidEntryObject",
        "longname": "<anonymous>~isValidEntryObject",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3466,
                3612
            ],
            "filename": "entry.js",
            "lineno": 93,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000731",
                "name": "e",
                "type": "ObjectExpression",
                "value": "{\"hash\":null,\"id\":\"\",\"payload\":\"\",\"next\":\"\",\"v\":\"\",\"clock\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "e",
        "longname": "<anonymous>~e",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3478,
                3488
            ],
            "filename": "entry.js",
            "lineno": 94,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000734",
                "name": "hash",
                "type": "Literal",
                "value": null
            }
        },
        "undocumented": true,
        "name": "hash",
        "longname": "<anonymous>~e.hash",
        "kind": "member",
        "memberof": "<anonymous>~e",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3496,
                3508
            ],
            "filename": "entry.js",
            "lineno": 95,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000736",
                "name": "id",
                "type": "MemberExpression",
                "value": "entry.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "<anonymous>~e.id",
        "kind": "member",
        "memberof": "<anonymous>~e",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3516,
                3538
            ],
            "filename": "entry.js",
            "lineno": 96,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000740",
                "name": "payload",
                "type": "MemberExpression",
                "value": "entry.payload"
            }
        },
        "undocumented": true,
        "name": "payload",
        "longname": "<anonymous>~e.payload",
        "kind": "member",
        "memberof": "<anonymous>~e",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3546,
                3562
            ],
            "filename": "entry.js",
            "lineno": 97,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000744",
                "name": "next",
                "type": "MemberExpression",
                "value": "entry.next"
            }
        },
        "undocumented": true,
        "name": "next",
        "longname": "<anonymous>~e.next",
        "kind": "member",
        "memberof": "<anonymous>~e",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3570,
                3580
            ],
            "filename": "entry.js",
            "lineno": 98,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000748",
                "name": "v",
                "type": "MemberExpression",
                "value": "entry.v"
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~e.v",
        "kind": "member",
        "memberof": "<anonymous>~e",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3588,
                3606
            ],
            "filename": "entry.js",
            "lineno": 99,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000752",
                "name": "clock",
                "type": "MemberExpression",
                "value": "entry.clock"
            }
        },
        "undocumented": true,
        "name": "clock",
        "longname": "<anonymous>~e.clock",
        "kind": "member",
        "memberof": "<anonymous>~e",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3652,
                3666
            ],
            "filename": "entry.js",
            "lineno": 102,
            "columnno": 38,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000767",
                "name": "key",
                "type": "MemberExpression",
                "value": "entry.key"
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "key",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3713,
                3737
            ],
            "filename": "entry.js",
            "lineno": 103,
            "columnno": 43,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000782",
                "name": "identity",
                "type": "MemberExpression",
                "value": "entry.identity"
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "identity",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3779,
                3793
            ],
            "filename": "entry.js",
            "lineno": 104,
            "columnno": 38,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000797",
                "name": "sig",
                "type": "MemberExpression",
                "value": "entry.sig"
            }
        },
        "undocumented": true,
        "name": "sig",
        "longname": "sig",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3808,
                3832
            ],
            "filename": "entry.js",
            "lineno": 106,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000802",
                "name": "data",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3843,
                3879
            ],
            "filename": "entry.js",
            "lineno": 107,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000810",
                "name": "object",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "object",
        "longname": "<anonymous>~object",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Create an Entry from a multihash\n   * @param {IPFS} [ipfs] An IPFS instance\n   * @param {string} [hash] Multihash as Base58 encoded string to create an Entry from\n   * @example\n   * const hash = await Entry.fromMultihash(ipfs, \"Qm...Foo\")\n   * console.log(hash)\n   * // { hash: \"Qm...Foo\", payload: \"hello\", next: [] }\n   * @returns {Promise<Entry>}\n   */",
        "meta": {
            "range": [
                4291,
                4940
            ],
            "filename": "entry.js",
            "lineno": 121,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000827",
                "name": "Entry.fromMultihash",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "hash"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create an Entry from a multihash",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "optional": true,
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "Multihash as Base58 encoded string to create an Entry from",
                "name": "hash"
            }
        ],
        "examples": [
            "const hash = await Entry.fromMultihash(ipfs, \"Qm...Foo\")\nconsole.log(hash)\n// { hash: \"Qm...Foo\", payload: \"hello\", next: [] }"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Entry>"
                    ]
                }
            }
        ],
        "name": "fromMultihash",
        "longname": "Entry.fromMultihash",
        "kind": "function",
        "memberof": "Entry",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4443,
                4495
            ],
            "filename": "entry.js",
            "lineno": 125,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000850",
                "name": "obj",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "obj",
        "longname": "<anonymous>~obj",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4479,
                4492
            ],
            "filename": "entry.js",
            "lineno": 125,
            "columnno": 46,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000861",
                "name": "enc",
                "type": "Literal",
                "value": "base58"
            }
        },
        "undocumented": true,
        "name": "enc",
        "longname": "enc",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4507,
                4543
            ],
            "filename": "entry.js",
            "lineno": 127,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000864",
                "name": "data",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4552,
                4728
            ],
            "filename": "entry.js",
            "lineno": 128,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000877",
                "name": "entry",
                "type": "ObjectExpression",
                "value": "{\"hash\":\"\",\"id\":\"\",\"payload\":\"\",\"next\":\"\",\"v\":\"\",\"clock\":\"\"}"
            }
        },
        "undocumented": true,
        "name": "entry",
        "longname": "<anonymous>~entry",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4568,
                4578
            ],
            "filename": "entry.js",
            "lineno": 129,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000880",
                "name": "hash",
                "type": "Identifier",
                "value": "hash"
            }
        },
        "undocumented": true,
        "name": "hash",
        "longname": "<anonymous>~entry.hash",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4586,
                4597
            ],
            "filename": "entry.js",
            "lineno": 130,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000882",
                "name": "id",
                "type": "MemberExpression",
                "value": "data.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "<anonymous>~entry.id",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4605,
                4626
            ],
            "filename": "entry.js",
            "lineno": 131,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000886",
                "name": "payload",
                "type": "MemberExpression",
                "value": "data.payload"
            }
        },
        "undocumented": true,
        "name": "payload",
        "longname": "<anonymous>~entry.payload",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4634,
                4649
            ],
            "filename": "entry.js",
            "lineno": 132,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000890",
                "name": "next",
                "type": "MemberExpression",
                "value": "data.next"
            }
        },
        "undocumented": true,
        "name": "next",
        "longname": "<anonymous>~entry.next",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4657,
                4666
            ],
            "filename": "entry.js",
            "lineno": 133,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000894",
                "name": "v",
                "type": "MemberExpression",
                "value": "data.v"
            }
        },
        "undocumented": true,
        "name": "v",
        "longname": "<anonymous>~entry.v",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4674,
                4722
            ],
            "filename": "entry.js",
            "lineno": 134,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000898",
                "name": "clock",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "clock",
        "longname": "<anonymous>~entry.clock",
        "kind": "member",
        "memberof": "<anonymous>~entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4771,
                4784
            ],
            "filename": "entry.js",
            "lineno": 137,
            "columnno": 41,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000922",
                "name": "key",
                "type": "MemberExpression",
                "value": "data.key"
            }
        },
        "undocumented": true,
        "name": "key",
        "longname": "key",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4834,
                4857
            ],
            "filename": "entry.js",
            "lineno": 138,
            "columnno": 46,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000937",
                "name": "identity",
                "type": "MemberExpression",
                "value": "data.identity"
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "identity",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4902,
                4915
            ],
            "filename": "entry.js",
            "lineno": 139,
            "columnno": 41,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000952",
                "name": "sig",
                "type": "MemberExpression",
                "value": "data.sig"
            }
        },
        "undocumented": true,
        "name": "sig",
        "longname": "sig",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Check if an object is an Entry\n   * @param {Entry} obj\n   * @returns {boolean}\n   */",
        "meta": {
            "range": [
                5040,
                5266
            ],
            "filename": "entry.js",
            "lineno": 149,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000958",
                "name": "Entry.isEntry",
                "type": "MethodDefinition",
                "paramnames": [
                    "obj"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Check if an object is an Entry",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "name": "obj"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "name": "isEntry",
        "longname": "Entry.isEntry",
        "kind": "function",
        "memberof": "Entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5270,
                5432
            ],
            "filename": "entry.js",
            "lineno": 158,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001001",
                "name": "Entry.compare",
                "type": "MethodDefinition",
                "paramnames": [
                    "a",
                    "b"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "compare",
        "longname": "Entry.compare",
        "kind": "function",
        "memberof": "Entry",
        "scope": "static",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5302,
                5344
            ],
            "filename": "entry.js",
            "lineno": 159,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001008",
                "name": "distance",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "distance",
        "longname": "<anonymous>~distance",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Check if an entry equals another entry\n   * @param {Entry} a\n   * @param {Entry} b\n   * @returns {boolean}\n   */",
        "meta": {
            "range": [
                5560,
                5616
            ],
            "filename": "entry.js",
            "lineno": 170,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001042",
                "name": "Entry.isEqual",
                "type": "MethodDefinition",
                "paramnames": [
                    "a",
                    "b"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Check if an entry equals another entry",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "name": "isEqual",
        "longname": "Entry.isEqual",
        "kind": "function",
        "memberof": "Entry",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Check if an entry is a parent to another entry.\n   * @param {Entry} [entry1] Entry to check\n   * @param {Entry} [entry2] Parent\n   * @returns {boolean}\n   */",
        "meta": {
            "range": [
                5789,
                5876
            ],
            "filename": "entry.js",
            "lineno": 180,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001056",
                "name": "Entry.isParent",
                "type": "MethodDefinition",
                "paramnames": [
                    "entry1",
                    "entry2"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Check if an entry is a parent to another entry.",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "optional": true,
                "description": "Entry to check",
                "name": "entry1"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "optional": true,
                "description": "Parent",
                "name": "entry2"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "name": "isParent",
        "longname": "Entry.isParent",
        "kind": "function",
        "memberof": "Entry",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Find entry's children from an Array of entries\n   *\n   * @description\n   * Returns entry's children as an Array up to the last know child.\n   *\n   * @param {Entry} [entry] Entry for which to find the parents\n   * @param {Array<Entry>} [values] Entries to search parents from\n   * @returns {Array<Entry>}\n   */",
        "meta": {
            "range": [
                6201,
                6554
            ],
            "filename": "entry.js",
            "lineno": 194,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001075",
                "name": "Entry.findChildren",
                "type": "MethodDefinition",
                "paramnames": [
                    "entry",
                    "values"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns entry's children as an Array up to the last know child.",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "optional": true,
                "description": "Entry for which to find the parents",
                "name": "entry"
            },
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "optional": true,
                "description": "Entries to search parents from",
                "name": "values"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                }
            }
        ],
        "name": "findChildren",
        "longname": "Entry.findChildren",
        "kind": "function",
        "memberof": "Entry",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6247,
                6257
            ],
            "filename": "entry.js",
            "lineno": 195,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001082",
                "name": "stack",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "stack",
        "longname": "<anonymous>~stack",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6266,
                6319
            ],
            "filename": "entry.js",
            "lineno": 196,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001086",
                "name": "parent",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "parent",
        "longname": "<anonymous>~parent",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6328,
                6340
            ],
            "filename": "entry.js",
            "lineno": 197,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001101",
                "name": "prev",
                "type": "Identifier",
                "value": "entry"
            }
        },
        "undocumented": true,
        "name": "prev",
        "longname": "<anonymous>~prev",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6393,
                6406
            ],
            "filename": "entry.js",
            "lineno": 200,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001114",
                "name": "prev",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "parent",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "prev",
        "longname": "<anonymous>~prev",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6413,
                6465
            ],
            "filename": "entry.js",
            "lineno": 201,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001118",
                "name": "parent",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "parent",
        "longname": "<anonymous>~parent",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6476,
                6533
            ],
            "filename": "entry.js",
            "lineno": 203,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001133",
                "name": "stack",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stack",
        "longname": "<anonymous>~stack",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6558,
                6580
            ],
            "filename": "entry.js",
            "lineno": 208,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001156",
                "name": "module.exports",
                "type": "Identifier",
                "value": "Entry",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * Interface for G-Set CRDT\n *\n * From:\n * \"A comprehensive study of Convergent and Commutative Replicated Data Types\"\n * https://hal.inria.fr/inria-00555588\n */",
        "meta": {
            "range": [
                180,
                352
            ],
            "filename": "g-set.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001165",
                "name": "GSet",
                "type": "ClassDeclaration",
                "paramnames": [
                    "values"
                ]
            }
        },
        "classdesc": "Interface for G-Set CRDT\n\nFrom:\n\"A comprehensive study of Convergent and Commutative Replicated Data Types\"\nhttps://hal.inria.fr/inria-00555588",
        "name": "GSet",
        "longname": "GSet",
        "kind": "class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                195,
                218
            ],
            "filename": "g-set.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001168",
                "name": "GSet",
                "type": "MethodDefinition",
                "paramnames": [
                    "values"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "GSet",
        "longname": "GSet",
        "kind": "class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                244,
                261
            ],
            "filename": "g-set.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001173",
                "name": "GSet#append",
                "type": "MethodDefinition",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "append",
        "longname": "GSet#append",
        "kind": "function",
        "memberof": "GSet",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                264,
                278
            ],
            "filename": "g-set.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001178",
                "name": "GSet#merge",
                "type": "MethodDefinition",
                "paramnames": [
                    "set"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "merge",
        "longname": "GSet#merge",
        "kind": "function",
        "memberof": "GSet",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                281,
                295
            ],
            "filename": "g-set.js",
            "lineno": 14,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001183",
                "name": "GSet#get",
                "type": "MethodDefinition",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "get",
        "longname": "GSet#get",
        "kind": "function",
        "memberof": "GSet",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                298,
                312
            ],
            "filename": "g-set.js",
            "lineno": 15,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001188",
                "name": "GSet#has",
                "type": "MethodDefinition",
                "paramnames": [
                    "value"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "has",
        "longname": "GSet#has",
        "kind": "function",
        "memberof": "GSet",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                315,
                331
            ],
            "filename": "g-set.js",
            "lineno": 16,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001193",
                "name": "GSet#values",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "GSet#values",
        "kind": "member",
        "memberof": "GSet",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                334,
                350
            ],
            "filename": "g-set.js",
            "lineno": 17,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001197",
                "name": "GSet#length",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "GSet#length",
        "kind": "member",
        "memberof": "GSet",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                354,
                375
            ],
            "filename": "g-set.js",
            "lineno": 20,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001202",
                "name": "module.exports",
                "type": "Identifier",
                "value": "GSet",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14,
                708
            ],
            "filename": "lamport-clock.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001211",
                "name": "LamportClock",
                "type": "ClassDeclaration",
                "paramnames": [
                    "id",
                    "time"
                ]
            }
        },
        "undocumented": true,
        "name": "LamportClock",
        "longname": "LamportClock",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                37,
                108
            ],
            "filename": "lamport-clock.js",
            "lineno": 4,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001214",
                "name": "LamportClock",
                "type": "MethodDefinition",
                "paramnames": [
                    "id",
                    "time"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "LamportClock",
        "longname": "LamportClock",
        "kind": "class",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                66,
                78
            ],
            "filename": "lamport-clock.js",
            "lineno": 5,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001221",
                "name": "this.id",
                "type": "Identifier",
                "value": "id",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "LamportClock#id",
        "kind": "member",
        "memberof": "LamportClock",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                83,
                104
            ],
            "filename": "lamport-clock.js",
            "lineno": 6,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001227",
                "name": "this.time",
                "type": "LogicalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "time",
        "longname": "LamportClock#time",
        "kind": "member",
        "memberof": "LamportClock",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                112,
                175
            ],
            "filename": "lamport-clock.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001234",
                "name": "LamportClock#tick",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "tick",
        "longname": "LamportClock#tick",
        "kind": "function",
        "memberof": "LamportClock",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                179,
                294
            ],
            "filename": "lamport-clock.js",
            "lineno": 13,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001248",
                "name": "LamportClock#merge",
                "type": "MethodDefinition",
                "paramnames": [
                    "clock"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "merge",
        "longname": "LamportClock#merge",
        "kind": "function",
        "memberof": "LamportClock",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                199,
                242
            ],
            "filename": "lamport-clock.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001254",
                "name": "this.time",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "time",
        "longname": "LamportClock#time",
        "kind": "member",
        "memberof": "LamportClock",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                298,
                360
            ],
            "filename": "lamport-clock.js",
            "lineno": 18,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001277",
                "name": "LamportClock#clone",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "clone",
        "longname": "LamportClock#clone",
        "kind": "function",
        "memberof": "LamportClock",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                364,
                706
            ],
            "filename": "lamport-clock.js",
            "lineno": 22,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001290",
                "name": "LamportClock.compare",
                "type": "MethodDefinition",
                "paramnames": [
                    "a",
                    "b"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "compare",
        "longname": "LamportClock.compare",
        "kind": "function",
        "memberof": "LamportClock",
        "scope": "static",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                469,
                491
            ],
            "filename": "lamport-clock.js",
            "lineno": 24,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001297",
                "name": "dist",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "dist",
        "longname": "<anonymous>~dist",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                710,
                739
            ],
            "filename": "lamport-clock.js",
            "lineno": 34,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001333",
                "name": "module.exports",
                "type": "Identifier",
                "value": "LamportClock",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                86
            ],
            "filename": "log-errors.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001343",
                "name": "IPFSNotDefinedError",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "IPFSNotDefinedError",
        "longname": "IPFSNotDefinedError",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                93,
                157
            ],
            "filename": "log-errors.js",
            "lineno": 4,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001350",
                "name": "LogNotDefinedError",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "LogNotDefinedError",
        "longname": "LogNotDefinedError",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                164,
                238
            ],
            "filename": "log-errors.js",
            "lineno": 5,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001357",
                "name": "NotALogError",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "NotALogError",
        "longname": "NotALogError",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                245,
                327
            ],
            "filename": "log-errors.js",
            "lineno": 6,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001364",
                "name": "CannotJoinWithDifferentId",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "CannotJoinWithDifferentId",
        "longname": "CannotJoinWithDifferentId",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                329,
                520
            ],
            "filename": "log-errors.js",
            "lineno": 8,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001371",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"IPFSNotDefinedError\":\"\",\"LogNotDefinedError\":\"\",\"NotALogError\":\"\",\"CannotJoinWithDifferentId\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                350,
                390
            ],
            "filename": "log-errors.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001376",
                "name": "IPFSNotDefinedError",
                "type": "Identifier",
                "value": "IPFSNotDefinedError"
            }
        },
        "undocumented": true,
        "name": "IPFSNotDefinedError",
        "longname": "module.exports.IPFSNotDefinedError",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                394,
                432
            ],
            "filename": "log-errors.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001378",
                "name": "LogNotDefinedError",
                "type": "Identifier",
                "value": "LogNotDefinedError"
            }
        },
        "undocumented": true,
        "name": "LogNotDefinedError",
        "longname": "module.exports.LogNotDefinedError",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                436,
                462
            ],
            "filename": "log-errors.js",
            "lineno": 11,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001380",
                "name": "NotALogError",
                "type": "Identifier",
                "value": "NotALogError"
            }
        },
        "undocumented": true,
        "name": "NotALogError",
        "longname": "module.exports.NotALogError",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                466,
                518
            ],
            "filename": "log-errors.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001382",
                "name": "CannotJoinWithDifferentId",
                "type": "Identifier",
                "value": "CannotJoinWithDifferentId"
            }
        },
        "undocumented": true,
        "name": "CannotJoinWithDifferentId",
        "longname": "module.exports.CannotJoinWithDifferentId",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                46
            ],
            "filename": "log-io.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001389",
                "name": "Entry",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Entry",
        "longname": "Entry",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                53,
                84
            ],
            "filename": "log-io.js",
            "lineno": 4,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001395",
                "name": "EntryIO",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "EntryIO",
        "longname": "EntryIO",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                91,
                125
            ],
            "filename": "log-io.js",
            "lineno": 5,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001401",
                "name": "Clock",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Clock",
        "longname": "Clock",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                132,
                166
            ],
            "filename": "log-io.js",
            "lineno": 6,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001407",
                "name": "LogError",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LogError",
        "longname": "LogError",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                175,
                184
            ],
            "filename": "log-io.js",
            "lineno": 7,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001415",
                "name": "isDefined",
                "type": "Identifier",
                "value": "isDefined"
            }
        },
        "undocumented": true,
        "name": "isDefined",
        "longname": "isDefined",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                186,
                197
            ],
            "filename": "log-io.js",
            "lineno": 7,
            "columnno": 19,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001417",
                "name": "findUniques",
                "type": "Identifier",
                "value": "findUniques"
            }
        },
        "undocumented": true,
        "name": "findUniques",
        "longname": "findUniques",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                199,
                209
            ],
            "filename": "log-io.js",
            "lineno": 7,
            "columnno": 32,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001419",
                "name": "difference",
                "type": "Identifier",
                "value": "difference"
            }
        },
        "undocumented": true,
        "name": "difference",
        "longname": "difference",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                240,
                296
            ],
            "filename": "log-io.js",
            "lineno": 9,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001425",
                "name": "last",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "last",
        "longname": "last",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                298,
                5857
            ],
            "filename": "log-io.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001442",
                "name": "LogIO",
                "type": "ClassDeclaration",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "LogIO",
        "longname": "LogIO",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                314,
                655
            ],
            "filename": "log-io.js",
            "lineno": 12,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001445",
                "name": "LogIO.toMultihash",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "log"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "toMultihash",
        "longname": "LogIO.toMultihash",
        "kind": "function",
        "memberof": "LogIO",
        "scope": "static",
        "params": [],
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                566,
                613
            ],
            "filename": "log-io.js",
            "lineno": 16,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001485",
                "name": "dagNode",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "dagNode",
        "longname": "<anonymous>~dagNode",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Create a log from multihash\n   * @param {IPFS} ipfs - An IPFS instance\n   * @param {string} hash - Multihash (as a Base58 encoded string) to create the log from\n   * @param {Number} [length=-1] - How many items to include in the log\n   * @param {function(hash, entry, parent, depth)} onProgressCallback\n   * @returns {Promise<Log>}\n   */",
        "meta": {
            "range": [
                1008,
                2007
            ],
            "filename": "log-io.js",
            "lineno": 28,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001505",
                "name": "LogIO.fromMultihash",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "hash",
                    "length",
                    "exclude",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a log from multihash",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Multihash (as a Base58 encoded string) to create the log from",
                "name": "hash"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "optional": true,
                "defaultvalue": -1,
                "description": "How many items to include in the log",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "onProgressCallback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                }
            }
        ],
        "name": "fromMultihash",
        "longname": "LogIO.fromMultihash",
        "kind": "function",
        "memberof": "LogIO",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1233,
                1289
            ],
            "filename": "log-io.js",
            "lineno": 32,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001540",
                "name": "dagNode",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "dagNode",
        "longname": "<anonymous>~dagNode",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1273,
                1286
            ],
            "filename": "log-io.js",
            "lineno": 32,
            "columnno": 50,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001551",
                "name": "enc",
                "type": "Literal",
                "value": "base58"
            }
        },
        "undocumented": true,
        "name": "enc",
        "longname": "enc",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1300,
                1343
            ],
            "filename": "log-io.js",
            "lineno": 33,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001554",
                "name": "logData",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "logData",
        "longname": "<anonymous>~logData",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1424,
                1520
            ],
            "filename": "log-io.js",
            "lineno": 36,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001582",
                "name": "entries",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entries",
        "longname": "<anonymous>~entries",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1557,
                1758
            ],
            "filename": "log-io.js",
            "lineno": 39,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001598",
                "name": "clock",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "clock",
        "longname": "<anonymous>~clock",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1770,
                1820
            ],
            "filename": "log-io.js",
            "lineno": 46,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001640",
                "name": "finalEntries",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "finalEntries",
        "longname": "<anonymous>~finalEntries",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1831,
                1895
            ],
            "filename": "log-io.js",
            "lineno": 47,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001653",
                "name": "heads",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "heads",
        "longname": "<anonymous>~heads",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1915,
                1929
            ],
            "filename": "log-io.js",
            "lineno": 49,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001672",
                "name": "id",
                "type": "MemberExpression",
                "value": "logData.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1937,
                1957
            ],
            "filename": "log-io.js",
            "lineno": 50,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001676",
                "name": "values",
                "type": "Identifier",
                "value": "finalEntries"
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "values",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1965,
                1977
            ],
            "filename": "log-io.js",
            "lineno": 51,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001678",
                "name": "heads",
                "type": "Identifier",
                "value": "heads"
            }
        },
        "undocumented": true,
        "name": "heads",
        "longname": "heads",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1985,
                1997
            ],
            "filename": "log-io.js",
            "lineno": 52,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001680",
                "name": "clock",
                "type": "Identifier",
                "value": "clock"
            }
        },
        "undocumented": true,
        "name": "clock",
        "longname": "clock",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2011,
                3001
            ],
            "filename": "log-io.js",
            "lineno": 56,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001682",
                "name": "LogIO.fromEntryHash",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "entryHash",
                    "id",
                    "length",
                    "exclude",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "fromEntryHash",
        "longname": "LogIO.fromEntryHash",
        "kind": "function",
        "memberof": "LogIO",
        "scope": "static",
        "params": [],
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2298,
                2362
            ],
            "filename": "log-io.js",
            "lineno": 61,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001715",
                "name": "entryHashes",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entryHashes",
        "longname": "<anonymous>~entryHashes",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2440,
                2491
            ],
            "filename": "log-io.js",
            "lineno": 64,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001727",
                "name": "length",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "<anonymous>~length",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2578,
                2601
            ],
            "filename": "log-io.js",
            "lineno": 67,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001742",
                "name": "excludeHashes",
                "type": "Identifier",
                "value": "exclude"
            }
        },
        "undocumented": true,
        "name": "excludeHashes",
        "longname": "<anonymous>~excludeHashes",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2664,
                2775
            ],
            "filename": "log-io.js",
            "lineno": 68,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001746",
                "name": "entries",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entries",
        "longname": "<anonymous>~entries",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2903,
                2957
            ],
            "filename": "log-io.js",
            "lineno": 71,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001761",
                "name": "sliced",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sliced",
        "longname": "<anonymous>~sliced",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2977,
                2991
            ],
            "filename": "log-io.js",
            "lineno": 73,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001775",
                "name": "values",
                "type": "Identifier",
                "value": "sliced"
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "values",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3005,
                3463
            ],
            "filename": "log-io.js",
            "lineno": 77,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001777",
                "name": "LogIO.fromJSON",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "json",
                    "length",
                    "timeout",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "fromJSON",
        "longname": "LogIO.fromJSON",
        "kind": "function",
        "memberof": "LogIO",
        "scope": "static",
        "params": [],
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3157,
                3197
            ],
            "filename": "log-io.js",
            "lineno": 79,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001800",
                "name": "headHashes",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "headHashes",
        "longname": "<anonymous>~headHashes",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3208,
                3308
            ],
            "filename": "log-io.js",
            "lineno": 80,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001814",
                "name": "entries",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entries",
        "longname": "<anonymous>~entries",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3319,
                3369
            ],
            "filename": "log-io.js",
            "lineno": 81,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001829",
                "name": "finalEntries",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "finalEntries",
        "longname": "<anonymous>~finalEntries",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3389,
                3400
            ],
            "filename": "log-io.js",
            "lineno": 83,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001843",
                "name": "id",
                "type": "MemberExpression",
                "value": "json.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3408,
                3428
            ],
            "filename": "log-io.js",
            "lineno": 84,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001847",
                "name": "values",
                "type": "Identifier",
                "value": "finalEntries"
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "values",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3436,
                3453
            ],
            "filename": "log-io.js",
            "lineno": 85,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001849",
                "name": "heads",
                "type": "MemberExpression",
                "value": "json.heads"
            }
        },
        "undocumented": true,
        "name": "heads",
        "longname": "heads",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Create a new log starting from an entry\n   * @param {IPFS} ipfs An IPFS instance\n   * @param {Array<Entry>} entries An entry or an array of entries to fetch a log from\n   * @param {Number} [length=-1] How many entries to include. Default: infinite.\n   * @param {Array<Entry|string>} [exclude] Entries to not fetch (cached)\n   * @param {function(hash, entry, parent, depth)} [onProgressCallback]\n   * @returns {Promise<Log>}\n   */",
        "meta": {
            "range": [
                3908,
                5855
            ],
            "filename": "log-io.js",
            "lineno": 98,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001853",
                "name": "LogIO.fromEntry",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "sourceEntries",
                    "length",
                    "exclude",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a new log starting from an entry",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "An entry or an array of entries to fetch a log from",
                "name": "entries"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "optional": true,
                "defaultvalue": -1,
                "description": "How many entries to include. Default: infinite.",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "Array.<(Entry|string)>"
                    ]
                },
                "optional": true,
                "description": "Entries to not fetch (cached)",
                "name": "exclude"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "name": "onProgressCallback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                }
            }
        ],
        "name": "fromEntry",
        "longname": "LogIO.fromEntry",
        "kind": "function",
        "memberof": "LogIO",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4432,
                4463
            ],
            "filename": "log-io.js",
            "lineno": 108,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001913",
                "name": "sourceEntries",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[\"sourceEntries\"]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sourceEntries",
        "longname": "<anonymous>~sourceEntries",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4547,
                4617
            ],
            "filename": "log-io.js",
            "lineno": 112,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001918",
                "name": "length",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "length",
        "longname": "<anonymous>~length",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4704,
                4743
            ],
            "filename": "log-io.js",
            "lineno": 115,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001935",
                "name": "hashes",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hashes",
        "longname": "<anonymous>~hashes",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4780,
                4880
            ],
            "filename": "log-io.js",
            "lineno": 118,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001947",
                "name": "entries",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entries",
        "longname": "<anonymous>~entries",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4965,
                5005
            ],
            "filename": "log-io.js",
            "lineno": 121,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001962",
                "name": "combined",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "combined",
        "longname": "<anonymous>~combined",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5016,
                5075
            ],
            "filename": "log-io.js",
            "lineno": 122,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001970",
                "name": "uniques",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "uniques",
        "longname": "<anonymous>~uniques",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5156,
                5219
            ],
            "filename": "log-io.js",
            "lineno": 125,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001983",
                "name": "sliced",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sliced",
        "longname": "<anonymous>~sliced",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5342,
                5406
            ],
            "filename": "log-io.js",
            "lineno": 129,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002001",
                "name": "missingSourceEntries",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "missingSourceEntries",
        "longname": "<anonymous>~missingSourceEntries",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5418,
                5559
            ],
            "filename": "log-io.js",
            "lineno": 131,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002009",
                "name": "replaceInFront",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "sliced": "<anonymous>~replaceInFront~sliced"
            }
        },
        "undocumented": true,
        "name": "replaceInFront",
        "longname": "<anonymous>~replaceInFront",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5467,
                5513
            ],
            "filename": "log-io.js",
            "lineno": 132,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002016",
                "name": "sliced",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "sliced",
        "longname": "<anonymous>~replaceInFront~sliced",
        "kind": "member",
        "memberof": "<anonymous>~replaceInFront",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5718,
                5771
            ],
            "filename": "log-io.js",
            "lineno": 138,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002035",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5791,
                5823
            ],
            "filename": "log-io.js",
            "lineno": 140,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002043",
                "name": "id",
                "type": "MemberExpression",
                "value": "result[undefined].id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5831,
                5845
            ],
            "filename": "log-io.js",
            "lineno": 141,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002053",
                "name": "values",
                "type": "Identifier",
                "value": "result"
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "values",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5859,
                5881
            ],
            "filename": "log-io.js",
            "lineno": 146,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002056",
                "name": "module.exports",
                "type": "Identifier",
                "value": "LogIO",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                43
            ],
            "filename": "log.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002066",
                "name": "pMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pMap",
        "longname": "pMap",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                75
            ],
            "filename": "log.js",
            "lineno": 4,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002072",
                "name": "GSet",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "GSet",
        "longname": "GSet",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                82,
                108
            ],
            "filename": "log.js",
            "lineno": 5,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002078",
                "name": "Entry",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Entry",
        "longname": "Entry",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                115,
                142
            ],
            "filename": "log.js",
            "lineno": 6,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002084",
                "name": "LogIO",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LogIO",
        "longname": "LogIO",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                149,
                183
            ],
            "filename": "log.js",
            "lineno": 7,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002090",
                "name": "LogError",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LogError",
        "longname": "LogError",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                190,
                224
            ],
            "filename": "log.js",
            "lineno": 8,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002096",
                "name": "Clock",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Clock",
        "longname": "Clock",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                233,
                246
            ],
            "filename": "log.js",
            "lineno": 9,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002104",
                "name": "LastWriteWins",
                "type": "Identifier",
                "value": "LastWriteWins"
            }
        },
        "undocumented": true,
        "name": "LastWriteWins",
        "longname": "LastWriteWins",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                248,
                256
            ],
            "filename": "log.js",
            "lineno": 9,
            "columnno": 23,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002106",
                "name": "NoZeroes",
                "type": "Identifier",
                "value": "NoZeroes"
            }
        },
        "undocumented": true,
        "name": "NoZeroes",
        "longname": "NoZeroes",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                292,
                349
            ],
            "filename": "log.js",
            "lineno": 10,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002112",
                "name": "AccessController",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "AccessController",
        "longname": "AccessController",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                358,
                367
            ],
            "filename": "log.js",
            "lineno": 11,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002120",
                "name": "isDefined",
                "type": "Identifier",
                "value": "isDefined"
            }
        },
        "undocumented": true,
        "name": "isDefined",
        "longname": "isDefined",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                369,
                380
            ],
            "filename": "log.js",
            "lineno": 11,
            "columnno": 19,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002122",
                "name": "findUniques",
                "type": "Identifier",
                "value": "findUniques"
            }
        },
        "undocumented": true,
        "name": "findUniques",
        "longname": "findUniques",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                411,
                459
            ],
            "filename": "log.js",
            "lineno": 13,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002128",
                "name": "randomId",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "randomId",
        "longname": "randomId",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                466,
                487
            ],
            "filename": "log.js",
            "lineno": 14,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002140",
                "name": "getHash",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "getHash",
        "longname": "getHash",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                494,
                533
            ],
            "filename": "log.js",
            "lineno": 15,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002148",
                "name": "flatMap",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "flatMap",
        "longname": "flatMap",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                540,
                577
            ],
            "filename": "log.js",
            "lineno": 16,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002159",
                "name": "getNextPointers",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "getNextPointers",
        "longname": "getNextPointers",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                584,
                649
            ],
            "filename": "log.js",
            "lineno": 17,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002167",
                "name": "maxClockTimeReducer",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "maxClockTimeReducer",
        "longname": "maxClockTimeReducer",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                656,
                731
            ],
            "filename": "log.js",
            "lineno": 18,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002183",
                "name": "uniqueEntriesReducer",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "res[undefined]": null
            }
        },
        "undocumented": true,
        "name": "uniqueEntriesReducer",
        "longname": "uniqueEntriesReducer",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                697,
                716
            ],
            "filename": "log.js",
            "lineno": 19,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002190",
                "name": "res[undefined]",
                "type": "Identifier",
                "value": "acc",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "res[undefined]",
        "longname": "res[undefined]",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                733,
                32641
            ],
            "filename": "log.js",
            "lineno": 23,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002199",
                "name": "Log",
                "type": "ClassDeclaration",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "logId",
                    "entries",
                    "heads",
                    "clock",
                    "sortFn"
                ]
            }
        },
        "undocumented": true,
        "name": "Log",
        "longname": "Log",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/**\n   * @description\n   * Log implements a G-Set CRDT and adds ordering\n   * Create a new Log instance\n   *\n   * From:\n   * \"A comprehensive study of Convergent and Commutative Replicated Data Types\"\n   * https://hal.inria.fr/inria-00555588\n   *\n   * @constructor\n   *\n   * @example\n   * const IPFS = require(\"ipfs\")\n   * const Log = require(\"../src/log\")\n   * const { AccessController, IdentityProvider } = require(\"../src/log\")\n   * const Keystore = require('orbit-db-keystore')\n   * const Entry = require(\"../src/entry\")\n   * const Clock = require('../src/lamport-clock')\n   *\n   * const accessController = new AccessController()\n   * const ipfs = new IPFS();\n   * const keystore = Keystore.create(\"../test/fixtures/keys\")\n   * const identitySignerFn = async (id, data) => {\n   *   const key = await keystore.getKey(id)\n   *   return keystore.sign(key, data)\n   * }\n   *\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   // console.log(Object.keys(log))\n   * })()\n   *\n   * @param  {IPFS}           [ipfs]          An IPFS instance\n   * @param  {Object}         [access]        AccessController (./default-access-controller)\n   * @param  {Object}         [identity]      Identity (https://github.com/orbitdb/orbit-db-identity-provider/blob/master/src/identity.js)\n   * @param  {String}         [logId]         ID of the log\n   * @param  {Array<Entry>}   [entries]       An Array of Entries from which to create the log\n   * @param  {Array<Entry>}   [heads]         Set the heads of the log\n   * @param  {Clock}          [clock]         Set the clock of the log\n   * @param  {Function}       [sortFn]        The sort function - by default LastWriteWins\n   * @return {Log}                            Log\n   */",
        "meta": {
            "range": [
                2615,
                4435
            ],
            "filename": "log.js",
            "lineno": 68,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002203",
                "name": "Log",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "logId",
                    "entries",
                    "heads",
                    "clock",
                    "sortFn"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Log implements a G-Set CRDT and adds ordering\nCreate a new Log instance\n\nFrom:\n\"A comprehensive study of Convergent and Commutative Replicated Data Types\"\nhttps://hal.inria.fr/inria-00555588",
        "kind": "class",
        "examples": [
            "const IPFS = require(\"ipfs\")\nconst Log = require(\"../src/log\")\nconst { AccessController, IdentityProvider } = require(\"../src/log\")\nconst Keystore = require('orbit-db-keystore')\nconst Entry = require(\"../src/entry\")\nconst Clock = require('../src/lamport-clock')\n\nconst accessController = new AccessController()\nconst ipfs = new IPFS();\nconst keystore = Keystore.create(\"../test/fixtures/keys\")\nconst identitySignerFn = async (id, data) => {\n  const key = await keystore.getKey(id)\n  return keystore.sign(key, data)\n}\n\n(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  // console.log(Object.keys(log))\n})()"
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "optional": true,
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "description": "AccessController (./default-access-controller)",
                "name": "access"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "description": "Identity (https://github.com/orbitdb/orbit-db-identity-provider/blob/master/src/identity.js)",
                "name": "identity"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "description": "ID of the log",
                "name": "logId"
            },
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "optional": true,
                "description": "An Array of Entries from which to create the log",
                "name": "entries"
            },
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "optional": true,
                "description": "Set the heads of the log",
                "name": "heads"
            },
            {
                "type": {
                    "names": [
                        "Clock"
                    ]
                },
                "optional": true,
                "description": "Set the clock of the log",
                "name": "clock"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The sort function - by default LastWriteWins",
                "name": "sortFn"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "Log"
            }
        ],
        "name": "Log",
        "longname": "Log",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3246,
                3268
            ],
            "filename": "log.js",
            "lineno": 90,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002287",
                "name": "sortFn",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "LastWriteWins",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "sortFn",
        "longname": "<anonymous>~sortFn",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3293,
                3324
            ],
            "filename": "log.js",
            "lineno": 95,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002294",
                "name": "this._sortFn",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_sortFn",
        "longname": "Log#_sortFn",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3330,
                3350
            ],
            "filename": "log.js",
            "lineno": 97,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002302",
                "name": "this._storage",
                "type": "Identifier",
                "value": "ipfs",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_storage",
        "longname": "Log#_storage",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3355,
                3385
            ],
            "filename": "log.js",
            "lineno": 98,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002308",
                "name": "this._id",
                "type": "LogicalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_id",
        "longname": "Log#_id",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3416,
                3437
            ],
            "filename": "log.js",
            "lineno": 101,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002317",
                "name": "this._access",
                "type": "Identifier",
                "value": "access",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_access",
        "longname": "Log#_access",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3458,
                3483
            ],
            "filename": "log.js",
            "lineno": 103,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002323",
                "name": "this._identity",
                "type": "Identifier",
                "value": "identity",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_identity",
        "longname": "Log#_identity",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3530,
                3553
            ],
            "filename": "log.js",
            "lineno": 106,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002329",
                "name": "entries",
                "type": "LogicalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "entries",
        "longname": "<anonymous>~entries",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3558,
                3617
            ],
            "filename": "log.js",
            "lineno": 107,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002335",
                "name": "this._entryIndex",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_entryIndex",
        "longname": "Log#_entryIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3669,
                3708
            ],
            "filename": "log.js",
            "lineno": 110,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002346",
                "name": "heads",
                "type": "LogicalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "heads",
        "longname": "<anonymous>~heads",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3713,
                3770
            ],
            "filename": "log.js",
            "lineno": 111,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002356",
                "name": "this._headsIndex",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_headsIndex",
        "longname": "Log#_headsIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3822,
                3843
            ],
            "filename": "log.js",
            "lineno": 114,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002367",
                "name": "this._nextsIndex",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_nextsIndex",
        "longname": "Log#_nextsIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3854,
                3928
            ],
            "filename": "log.js",
            "lineno": 115,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002373",
                "name": "addToNextsIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "addToNextsIndex",
        "longname": "<anonymous>~addToNextsIndex",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3898,
                3926
            ],
            "filename": "log.js",
            "lineno": 115,
            "columnno": 54,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002385",
                "name": "this._nextsIndex[undefined]",
                "type": "MemberExpression",
                "value": "e.hash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_nextsIndex[undefined]",
        "longname": "<anonymous>#_nextsIndex[undefined]",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4038,
                4067
            ],
            "filename": "log.js",
            "lineno": 119,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002401",
                "name": "this._length",
                "type": "MemberExpression",
                "value": "entries.length",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_length",
        "longname": "Log#_length",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4100,
                4185
            ],
            "filename": "log.js",
            "lineno": 122,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002409",
                "name": "maxTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "maxTime",
        "longname": "<anonymous>~maxTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4373,
                4431
            ],
            "filename": "log.js",
            "lineno": 126,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002430",
                "name": "this._clock",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_clock",
        "longname": "Log#_clock",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Returns the ID of the log\n   *\n   * @returns {string} the ID of the log\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *   console.log(log.id) // default uses JS microtime\n   *\n   *   var log2 = new Log(ipfs, accessController, identity, \"MyLogID\")\n   *   console.log(log2.id) // or you can specify your own\n   * })()\n   */",
        "meta": {
            "range": [
                4927,
                4962
            ],
            "filename": "log.js",
            "lineno": 144,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002442",
                "name": "Log#id",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the ID of the log",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "the ID of the log"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n  console.log(log.id) // default uses JS microtime\n\n  var log2 = new Log(ipfs, accessController, identity, \"MyLogID\")\n  console.log(log2.id) // or you can specify your own\n})()"
        ],
        "name": "id",
        "longname": "Log#id",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns the clock of the log\n   *\n   * @returns {string} The log's LamportClock\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *   console.log(log.clock)\n   * })()\n   */",
        "meta": {
            "range": [
                5301,
                5342
            ],
            "filename": "log.js",
            "lineno": 160,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002450",
                "name": "Log#clock",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the clock of the log",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The log's LamportClock"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n  console.log(log.clock)\n})()"
        ],
        "name": "clock",
        "longname": "Log#clock",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns the length of the log\n   * @return {Number} length of the log\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *   console.log(log.length)\n   *\n   *   var entry = await Entry.create(ipfs, identity, '1', 'entry1', [], new Clock('1', 0))\n   *   await log.append(entry)\n   *   console.log(log.length)\n   * })()\n   *\n   */",
        "meta": {
            "range": [
                5836,
                5879
            ],
            "filename": "log.js",
            "lineno": 180,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002458",
                "name": "Log#length",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the length of the log",
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "length of the log"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n  console.log(log.length)\n\n  var entry = await Entry.create(ipfs, identity, '1', 'entry1', [], new Clock('1', 0))\n  await log.append(entry)\n  console.log(log.length)\n})()"
        ],
        "name": "length",
        "longname": "Log#length",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns the values in the log\n   * @returns {Array<Entry>} all values of the log sorted by LastWriteWins\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   var entry = await Entry.create(ipfs, identity, '1', 'entry1', [], new Clock('1', 0))\n   *   await log.append(entry)\n   *   console.log(log.values.map(e => e.payload.payload)\n   * })()\n   */",
        "meta": {
            "range": [
                6399,
                6480
            ],
            "filename": "log.js",
            "lineno": 198,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002466",
                "name": "Log#values",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the values in the log",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "all values of the log sorted by LastWriteWins"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  var entry = await Entry.create(ipfs, identity, '1', 'entry1', [], new Clock('1', 0))\n  await log.append(entry)\n  console.log(log.values.map(e => e.payload.payload)\n})()"
        ],
        "name": "values",
        "longname": "Log#values",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns an array of heads as multihashes\n   * @returns {Array<string>} values of the log head(s)\n   *\n   * @example\n   * (async () => {\n   *   var identity1 = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var identity2 = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *\n   *   var log1 = new Log(ipfs, accessController, identity1)\n   *   var log2 = new Log(ipfs, accessController, identity2)\n   *\n   *   await log1.append(\"entryA1\")\n   *   await log1.append(\"entryA2\")\n   *   await log1.append(\"entryA3\")\n   *\n   *   await log2.append(\"entryB1\")\n   *   await log2.append(\"entryB2\")\n   *\n   *   await log1.join(log2)\n   *\n   *   console.log(log1.heads.map(e => e.payload))\n   * })()\n   */",
        "meta": {
            "range": [
                7256,
                7346
            ],
            "filename": "log.js",
            "lineno": 226,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002485",
                "name": "Log#heads",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns an array of heads as multihashes",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ]
                },
                "description": "values of the log head(s)"
            }
        ],
        "examples": [
            "(async () => {\n  var identity1 = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var identity2 = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n\n  var log1 = new Log(ipfs, accessController, identity1)\n  var log2 = new Log(ipfs, accessController, identity2)\n\n  await log1.append(\"entryA1\")\n  await log1.append(\"entryA2\")\n  await log1.append(\"entryA3\")\n\n  await log2.append(\"entryB1\")\n  await log2.append(\"entryB2\")\n\n  await log1.join(log2)\n\n  console.log(log1.heads.map(e => e.payload))\n})()"
        ],
        "name": "heads",
        "longname": "Log#heads",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * **Note: May be deprecated**\n   *\n   * Returns an array of Entry objects that reference entries which\n   * are not in the log currently\n   *\n   * @returns {Array<Entry>} values of the log tail(s)s\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   * })()\n   */",
        "meta": {
            "range": [
                7771,
                7827
            ],
            "filename": "log.js",
            "lineno": 244,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002506",
                "name": "Log#tails",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "**Note: May be deprecated**\n\nReturns an array of Entry objects that reference entries which\nare not in the log currently",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "values of the log tail(s)s"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n})()"
        ],
        "name": "tails",
        "longname": "Log#tails",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * **Note: May be deprecated**\n   *\n   * Returns an array of multihashes that are referenced by entries which\n   * are not in the log currently\n   * @returns {Array<string>} Array of multihashes\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   * })()\n   */",
        "meta": {
            "range": [
                8248,
                8314
            ],
            "filename": "log.js",
            "lineno": 261,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002518",
                "name": "Log#tailHashes",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "**Note: May be deprecated**\n\nReturns an array of multihashes that are referenced by entries which\nare not in the log currently",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ]
                },
                "description": "Array of multihashes"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n})()"
        ],
        "name": "tailHashes",
        "longname": "Log#tailHashes",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Find an entry\n   * @param {string} [hash] The Multihash of the entry as Base58 encoded string\n   * @returns {Entry|undefined} hash of the entry index\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   await log.append(\"entry1\")\n   *   await log.append(\"entry2\")\n   *   await log.append(\"entry3\")\n   *\n   *   var hash = Object.keys(log._entryIndex)[1]\n   *   console.log(log.get(hash).payload)\n   * })()\n   */",
        "meta": {
            "range": [
                8897,
                8947
            ],
            "filename": "log.js",
            "lineno": 283,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002530",
                "name": "Log#get",
                "type": "MethodDefinition",
                "paramnames": [
                    "hash"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Find an entry",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "The Multihash of the entry as Base58 encoded string",
                "name": "hash"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Entry",
                        "undefined"
                    ]
                },
                "description": "hash of the entry index"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  await log.append(\"entry1\")\n  await log.append(\"entry2\")\n  await log.append(\"entry3\")\n\n  var hash = Object.keys(log._entryIndex)[1]\n  console.log(log.get(hash).payload)\n})()"
        ],
        "name": "get",
        "longname": "Log#get",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Verify that the log contains the entry you're seeking\n   *\n   * @param {Entry} entry the entry you're looking to verify\n   * @returns {Boolean} `true` or `false` if the log contains the entry\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   await log.append(\"entry1\")\n   *   await log.append(\"entry2\")\n   *   await log.append(\"entry3\")\n   *\n   *   var hash = Object.keys(log._entryIndex)[1]\n   *   console.log(`${hash} --> ${log.has(hash)}`)\n   * })()\n   */",
        "meta": {
            "range": [
                9581,
                9661
            ],
            "filename": "log.js",
            "lineno": 306,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002541",
                "name": "Log#has",
                "type": "MethodDefinition",
                "paramnames": [
                    "entry"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Verify that the log contains the entry you're seeking",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "description": "the entry you're looking to verify",
                "name": "entry"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "`true` or `false` if the log contains the entry"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  await log.append(\"entry1\")\n  await log.append(\"entry2\")\n  await log.append(\"entry3\")\n\n  var hash = Object.keys(log._entryIndex)[1]\n  console.log(`${hash} --> ${log.has(hash)}`)\n})()"
        ],
        "name": "has",
        "longname": "Log#has",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Follow the pointers and load the log into memory for processing\n   *\n   * @param {Array} rootEntries entry or entries to start from\n   * @param {Number} amount number of entries to traverse\n   *\n   * @returns {Object} object containing traversed entries\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   await log.append(\"entryA1\")\n   *   await log.append(\"entryA2\")\n   *   await log.append(\"entryA3\")\n   *\n   *   var traverse1 = log.traverse(log.heads, 1)\n   *   console.log(Object.keys(traverse1).length)\n   *\n   *   var traverse2 = log.traverse(log.heads, 2)\n   *   console.log(Object.keys(traverse2).length)\n   *\n   *   var traverse3 = log.traverse(log.heads, 3)\n   *   console.log(Object.keys(traverse3).length)\n   * })()\n   */",
        "meta": {
            "range": [
                10569,
                12147
            ],
            "filename": "log.js",
            "lineno": 337,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002558",
                "name": "Log#traverse",
                "type": "MethodDefinition",
                "paramnames": [
                    "rootEntries",
                    "amount"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Follow the pointers and load the log into memory for processing",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "entry or entries to start from",
                "name": "rootEntries"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "number of entries to traverse",
                "name": "amount"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "object containing traversed entries"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  await log.append(\"entryA1\")\n  await log.append(\"entryA2\")\n  await log.append(\"entryA3\")\n\n  var traverse1 = log.traverse(log.heads, 1)\n  console.log(Object.keys(traverse1).length)\n\n  var traverse2 = log.traverse(log.heads, 2)\n  console.log(Object.keys(traverse2).length)\n\n  var traverse3 = log.traverse(log.heads, 3)\n  console.log(Object.keys(traverse3).length)\n})()"
        ],
        "name": "traverse",
        "longname": "Log#traverse",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10686,
                10734
            ],
            "filename": "log.js",
            "lineno": 339,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002568",
                "name": "stack",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stack",
        "longname": "<anonymous>~stack",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10805,
                10819
            ],
            "filename": "log.js",
            "lineno": 341,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002581",
                "name": "traversed",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "traversed",
        "longname": "<anonymous>~traversed",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10846,
                10857
            ],
            "filename": "log.js",
            "lineno": 343,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002585",
                "name": "result",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10949,
                10958
            ],
            "filename": "log.js",
            "lineno": 345,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002589",
                "name": "count",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "count",
        "longname": "<anonymous>~count",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11026,
                11053
            ],
            "filename": "log.js",
            "lineno": 348,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002593",
                "name": "getEntry",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "getEntry",
        "longname": "<anonymous>~getEntry",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11124,
                11511
            ],
            "filename": "log.js",
            "lineno": 351,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002603",
                "name": "addToStack",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "stack": "<anonymous>~addToStack~stack",
                "traversed[undefined]": "<anonymous>~traversed.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToStack",
        "longname": "<anonymous>~addToStack",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11350,
                11422
            ],
            "filename": "log.js",
            "lineno": 358,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002620",
                "name": "stack",
                "type": "CallExpression",
                "funcscope": "<anonymous>~addToStack",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "stack",
        "longname": "<anonymous>~addToStack~stack",
        "kind": "member",
        "memberof": "<anonymous>~addToStack",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11477,
                11505
            ],
            "filename": "log.js",
            "lineno": 363,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002636",
                "name": "traversed[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~traversed.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~traversed",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11884,
                11905
            ],
            "filename": "log.js",
            "lineno": 372,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002660",
                "name": "entry",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entry",
        "longname": "<anonymous>~entry",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11954,
                11980
            ],
            "filename": "log.js",
            "lineno": 376,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002670",
                "name": "result[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "entry",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Append an entry to the log\n   * @param  {Entry} data Entry to add\n   * @param {Number} pointerCount \"Depth\" of log to traverse\n   * @return {Log}   New Log containing the appended value\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   await log.append(\"entry1\")\n   *   await log.append(\"entry2\")\n   *   await log.append(\"entry3\")\n   *\n   *   console.log(log.length)\n   *  })()\n   */",
        "meta": {
            "range": [
                12706,
                13968
            ],
            "filename": "log.js",
            "lineno": 405,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002695",
                "name": "Log#append",
                "type": "MethodDefinition",
                "paramnames": [
                    "data",
                    "pointerCount"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Append an entry to the log",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "description": "Entry to add",
                "name": "data"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "\"Depth\" of log to traverse",
                "name": "pointerCount",
                "defaultvalue": 1
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "New Log containing the appended value"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  await log.append(\"entry1\")\n  await log.append(\"entry2\")\n  await log.append(\"entry3\")\n\n  console.log(log.length)\n })()"
        ],
        "name": "append",
        "longname": "Log#append",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12804,
                12886
            ],
            "filename": "log.js",
            "lineno": 407,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002704",
                "name": "newTime",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "newTime",
        "longname": "<anonymous>~newTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12891,
                12938
            ],
            "filename": "log.js",
            "lineno": 408,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002726",
                "name": "this._clock",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_clock",
        "longname": "Log#_clock",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13041,
                13122
            ],
            "filename": "log.js",
            "lineno": 411,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002739",
                "name": "references",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "references",
        "longname": "<anonymous>~references",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13133,
                13201
            ],
            "filename": "log.js",
            "lineno": 412,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002759",
                "name": "nexts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nexts",
        "longname": "<anonymous>~nexts",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13379,
                13512
            ],
            "filename": "log.js",
            "lineno": 416,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002775",
                "name": "entry",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entry",
        "longname": "<anonymous>~entry",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13524,
                13596
            ],
            "filename": "log.js",
            "lineno": 425,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002797",
                "name": "canAppend",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "canAppend",
        "longname": "<anonymous>~canAppend",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13741,
                13777
            ],
            "filename": "log.js",
            "lineno": 430,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002828",
                "name": "this._entryIndex[undefined]",
                "type": "Identifier",
                "value": "entry",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_entryIndex[undefined]",
        "longname": "Log#_entryIndex[undefined]",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13802,
                13834
            ],
            "filename": "log.js",
            "lineno": 431,
            "columnno": 24,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002844",
                "name": "this._nextsIndex[undefined]",
                "type": "MemberExpression",
                "value": "entry.hash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_nextsIndex[undefined]",
        "longname": "Log#_nextsIndex[undefined]",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13841,
                13862
            ],
            "filename": "log.js",
            "lineno": 432,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002854",
                "name": "this._headsIndex",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_headsIndex",
        "longname": "Log#_headsIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13867,
                13903
            ],
            "filename": "log.js",
            "lineno": 433,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002860",
                "name": "this._headsIndex[undefined]",
                "type": "Identifier",
                "value": "entry",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_headsIndex[undefined]",
        "longname": "Log#_headsIndex[undefined]",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Join two logs\n   *\n   * @description Joins two logs returning a new log. Doesn't mutate the original logs.\n   *\n   * @param {Log}    log    Log to join with this Log\n   * @param {Number} size Max size of the joined log\n   *\n   * @returns {Promise<Log>} The promise of a new Log\n   *\n   * @example\n   * (async () => {\n   *   var identity1 = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var identity2 = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *\n   *   var log1 = new Log(ipfs, accessController, identity1)\n   *   var log2 = new Log(ipfs, accessController, identity2)\n   *\n   *   await log1.append(\"entryA1\")\n   *   await log1.append(\"entryA2\")\n   *   await log1.append(\"entryA3\")\n   *\n   *   await log2.append(\"entryB1\")\n   *   await log2.append(\"entryB2\")\n   *\n   *   await log1.join(log2)\n   *\n   *   console.log(log1.length)\n   * })()\n   */",
        "meta": {
            "range": [
                14906,
                17611
            ],
            "filename": "log.js",
            "lineno": 469,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002876",
                "name": "Log#join",
                "type": "MethodDefinition",
                "paramnames": [
                    "log",
                    "size"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Joins two logs returning a new log. Doesn't mutate the original logs.",
        "params": [
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "Log to join with this Log",
                "name": "log"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "Max size of the joined log",
                "name": "size"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                },
                "description": "The promise of a new Log"
            }
        ],
        "examples": [
            "(async () => {\n  var identity1 = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var identity2 = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n\n  var log1 = new Log(ipfs, accessController, identity1)\n  var log2 = new Log(ipfs, accessController, identity2)\n\n  await log1.append(\"entryA1\")\n  await log1.append(\"entryA2\")\n  await log1.append(\"entryA3\")\n\n  await log2.append(\"entryB1\")\n  await log2.append(\"entryB2\")\n\n  await log1.join(log2)\n\n  console.log(log1.length)\n})()"
        ],
        "name": "join",
        "longname": "Log#join",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15136,
                15172
            ],
            "filename": "log.js",
            "lineno": 475,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002917",
                "name": "newItems",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "newItems",
        "longname": "<anonymous>~newItems",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15184,
                15226
            ],
            "filename": "log.js",
            "lineno": 477,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002926",
                "name": "identityProvider",
                "type": "MemberExpression",
                "value": "this._identity.provider"
            }
        },
        "undocumented": true,
        "name": "identityProvider",
        "longname": "<anonymous>~identityProvider",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15343,
                15602
            ],
            "filename": "log.js",
            "lineno": 480,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002934",
                "name": "permitted",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "canAppend": "<anonymous>~permitted~canAppend"
            }
        },
        "undocumented": true,
        "name": "permitted",
        "longname": "<anonymous>~permitted",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": [],
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15386,
                15451
            ],
            "filename": "log.js",
            "lineno": 481,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002940",
                "name": "canAppend",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "canAppend",
        "longname": "<anonymous>~permitted~canAppend",
        "kind": "constant",
        "memberof": "<anonymous>~permitted",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15696,
                16005
            ],
            "filename": "log.js",
            "lineno": 488,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002967",
                "name": "verify",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "isValid": "<anonymous>~verify~isValid",
                "publicKey": "<anonymous>~verify~publicKey"
            }
        },
        "undocumented": true,
        "name": "verify",
        "longname": "<anonymous>~verify",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": [],
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15736,
                15789
            ],
            "filename": "log.js",
            "lineno": 489,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002973",
                "name": "isValid",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isValid",
        "longname": "<anonymous>~verify~isValid",
        "kind": "constant",
        "memberof": "<anonymous>~verify",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15802,
                15867
            ],
            "filename": "log.js",
            "lineno": 490,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002983",
                "name": "publicKey",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "publicKey",
        "longname": "<anonymous>~verify~publicKey",
        "kind": "constant",
        "memberof": "<anonymous>~verify",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16017,
                16056
            ],
            "filename": "log.js",
            "lineno": 494,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003016",
                "name": "entriesToJoin",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entriesToJoin",
        "longname": "<anonymous>~entriesToJoin",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16100,
                16114
            ],
            "filename": "log.js",
            "lineno": 495,
            "columnno": 43,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003030",
                "name": "concurrency",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "concurrency",
        "longname": "concurrency",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16158,
                16172
            ],
            "filename": "log.js",
            "lineno": 496,
            "columnno": 40,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003039",
                "name": "concurrency",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "concurrency",
        "longname": "concurrency",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16234,
                16419
            ],
            "filename": "log.js",
            "lineno": 499,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003042",
                "name": "addToNextsIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "entry": "<anonymous>~addToNextsIndex~entry",
                "": null
            }
        },
        "undocumented": true,
        "name": "addToNextsIndex",
        "longname": "<anonymous>~addToNextsIndex",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16271,
                16295
            ],
            "filename": "log.js",
            "lineno": 500,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003048",
                "name": "entry",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entry",
        "longname": "<anonymous>~addToNextsIndex~entry",
        "kind": "constant",
        "memberof": "<anonymous>~addToNextsIndex",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16383,
                16411
            ],
            "filename": "log.js",
            "lineno": 502,
            "columnno": 27,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003074",
                "name": "this._nextsIndex[undefined]",
                "type": "MemberExpression",
                "value": "e.hash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_nextsIndex[undefined]",
        "longname": "<anonymous>#_nextsIndex[undefined]",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16517,
                16577
            ],
            "filename": "log.js",
            "lineno": 507,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003094",
                "name": "this._entryIndex",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_entryIndex",
        "longname": "Log#_entryIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16612,
                16685
            ],
            "filename": "log.js",
            "lineno": 510,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003107",
                "name": "notReferencedByNewItems",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "notReferencedByNewItems",
        "longname": "<anonymous>~notReferencedByNewItems",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16696,
                16746
            ],
            "filename": "log.js",
            "lineno": 511,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003124",
                "name": "notInCurrentNexts",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "notInCurrentNexts",
        "longname": "<anonymous>~notInCurrentNexts",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16757,
                16841
            ],
            "filename": "log.js",
            "lineno": 512,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003137",
                "name": "nextsFromNewItems",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nextsFromNewItems",
        "longname": "<anonymous>~nextsFromNewItems",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                16852,
                17060
            ],
            "filename": "log.js",
            "lineno": 513,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003154",
                "name": "mergedHeads",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mergedHeads",
        "longname": "<anonymous>~mergedHeads",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17066,
                17096
            ],
            "filename": "log.js",
            "lineno": 518,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003189",
                "name": "this._headsIndex",
                "type": "Identifier",
                "value": "mergedHeads",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_headsIndex",
        "longname": "Log#_headsIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17164,
                17181
            ],
            "filename": "log.js",
            "lineno": 522,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003201",
                "name": "tmp",
                "type": "MemberExpression",
                "value": "this.values"
            }
        },
        "undocumented": true,
        "name": "tmp",
        "longname": "<anonymous>~tmp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17188,
                17210
            ],
            "filename": "log.js",
            "lineno": 523,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003207",
                "name": "tmp",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "tmp",
        "longname": "<anonymous>~tmp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17217,
                17272
            ],
            "filename": "log.js",
            "lineno": 524,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003216",
                "name": "this._entryIndex",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_entryIndex",
        "longname": "Log#_entryIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17279,
                17316
            ],
            "filename": "log.js",
            "lineno": 525,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003227",
                "name": "this._headsIndex",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_headsIndex",
        "longname": "Log#_headsIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17323,
                17376
            ],
            "filename": "log.js",
            "lineno": 526,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003237",
                "name": "this._length",
                "type": "MemberExpression",
                "value": ".length",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_length",
        "longname": "Log#_length",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17438,
                17511
            ],
            "filename": "log.js",
            "lineno": 530,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003251",
                "name": "maxClock",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "maxClock",
        "longname": "<anonymous>~maxClock",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17516,
                17591
            ],
            "filename": "log.js",
            "lineno": 531,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003266",
                "name": "this._clock",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_clock",
        "longname": "Log#_clock",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Get the log in JSON format\n   * @returns {Object<{id, heads}>} object with the id of the log and the heads\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   await log.append(\"entryA1\")\n   *   await log.append(\"entryA2\")\n   *   await log.append(\"entryA3\")\n   *\n   *   console.log(log.toJSON())\n   * })()\n   */",
        "meta": {
            "range": [
                18095,
                18334
            ],
            "filename": "log.js",
            "lineno": 551,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003289",
                "name": "Log#toJSON",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Get the log in JSON format",
        "returns": [
            {
                "type": {
                    "names": [
                        "Object.<{id, heads}>"
                    ]
                },
                "description": "object with the id of the log and the heads"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  await log.append(\"entryA1\")\n  await log.append(\"entryA2\")\n  await log.append(\"entryA3\")\n\n  console.log(log.toJSON())\n})()"
        ],
        "name": "toJSON",
        "longname": "Log#toJSON",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18126,
                18137
            ],
            "filename": "log.js",
            "lineno": 553,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003295",
                "name": "id",
                "type": "MemberExpression",
                "value": "this.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18145,
                18293
            ],
            "filename": "log.js",
            "lineno": 554,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003299",
                "name": "heads",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "heads",
        "longname": "heads",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Get a snapshot of the log\n   * @returns {Object<{id, heads, values}>} object with id, heads, and values array\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   await log.append(\"entryA1\")\n   *   await log.append(\"entryA2\")\n   *   await log.append(\"entryA3\")\n   *\n   *   console.log(log.toSnapshot())\n   * })()\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   * })()\n   */",
        "meta": {
            "range": [
                19014,
                19122
            ],
            "filename": "log.js",
            "lineno": 581,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003316",
                "name": "Log#toSnapshot",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Get a snapshot of the log",
        "returns": [
            {
                "type": {
                    "names": [
                        "Object.<{id, heads, values}>"
                    ]
                },
                "description": "object with id, heads, and values array"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  await log.append(\"entryA1\")\n  await log.append(\"entryA2\")\n  await log.append(\"entryA3\")\n\n  console.log(log.toSnapshot())\n})()\n(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n})()"
        ],
        "name": "toSnapshot",
        "longname": "Log#toSnapshot",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19049,
                19060
            ],
            "filename": "log.js",
            "lineno": 583,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003322",
                "name": "id",
                "type": "MemberExpression",
                "value": "this.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19068,
                19085
            ],
            "filename": "log.js",
            "lineno": 584,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003326",
                "name": "heads",
                "type": "MemberExpression",
                "value": "this.heads"
            }
        },
        "undocumented": true,
        "name": "heads",
        "longname": "heads",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19093,
                19112
            ],
            "filename": "log.js",
            "lineno": 585,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003330",
                "name": "values",
                "type": "MemberExpression",
                "value": "this.values"
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "values",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Get the log as a Buffer\n   * @returns {Buffer} Buffer version of stringified log JSON\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   await log.append(\"entryA1\")\n   *   await log.append(\"entryA2\")\n   *   await log.append(\"entryA3\")\n   *\n   *   console.log(log.toBuffer())\n   * })()\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   * })()\n   */",
        "meta": {
            "range": [
                19776,
                19847
            ],
            "filename": "log.js",
            "lineno": 609,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003334",
                "name": "Log#toBuffer",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Get the log as a Buffer",
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "Buffer version of stringified log JSON"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  await log.append(\"entryA1\")\n  await log.append(\"entryA2\")\n  await log.append(\"entryA3\")\n\n  console.log(log.toBuffer())\n})()\n(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n})()"
        ],
        "name": "toBuffer",
        "longname": "Log#toBuffer",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns the log entries as a formatted string\n   *\n   * @param {Function} payloadMapper transformation function\n   *\n   * @returns {string} plain text representation of the log\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   await log.append(\"entryA1\")\n   *   await log.append(\"entryA2\")\n   *   await log.append(\"entryA3\")\n   *\n   *   console.log(log.toString())\n   * })()\n   */",
        "meta": {
            "range": [
                20403,
                20930
            ],
            "filename": "log.js",
            "lineno": 632,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003351",
                "name": "Log#toString",
                "type": "MethodDefinition",
                "paramnames": [
                    "payloadMapper"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the log entries as a formatted string",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "transformation function",
                "name": "payloadMapper"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "plain text representation of the log"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  await log.append(\"entryA1\")\n  await log.append(\"entryA2\")\n  await log.append(\"entryA3\")\n\n  console.log(log.toString())\n})()"
        ],
        "name": "toString",
        "longname": "Log#toString",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20524,
                20568
            ],
            "filename": "log.js",
            "lineno": 637,
            "columnno": 14,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003376",
                "name": "parents",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "parents",
        "longname": "<anonymous>~parents",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20583,
                20603
            ],
            "filename": "log.js",
            "lineno": 638,
            "columnno": 14,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003387",
                "name": "len",
                "type": "MemberExpression",
                "value": "parents.length"
            }
        },
        "undocumented": true,
        "name": "len",
        "longname": "<anonymous>~len",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20616,
                20657
            ],
            "filename": "log.js",
            "lineno": 639,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003393",
                "name": "padding",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "padding",
        "longname": "<anonymous>~padding",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20666,
                20714
            ],
            "filename": "log.js",
            "lineno": 640,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003406",
                "name": "padding",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "padding",
        "longname": "<anonymous>~padding",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20723,
                20775
            ],
            "filename": "log.js",
            "lineno": 641,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003419",
                "name": "padding",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "padding",
        "longname": "<anonymous>~padding",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n   * Check whether an object is a Log instance\n   * @param {Object} log An object to check\n   * @returns {true|false} true or false if the object is a log instance\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *   var notALog = { \"Not\": \"Log\"}\n   *\n   *   console.log(Log.isLog(log))\n   *   console.log(Log.isLog(notALog))\n   * })()\n   */",
        "meta": {
            "range": [
                21434,
                21562
            ],
            "filename": "log.js",
            "lineno": 663,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003451",
                "name": "Log.isLog",
                "type": "MethodDefinition",
                "paramnames": [
                    "log"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Check whether an object is a Log instance",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "An object to check",
                "name": "log"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "true",
                        "false"
                    ]
                },
                "description": "true or false if the object is a log instance"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n  var notALog = { \"Not\": \"Log\"}\n\n  console.log(Log.isLog(log))\n  console.log(Log.isLog(notALog))\n})()"
        ],
        "name": "isLog",
        "longname": "Log.isLog",
        "kind": "function",
        "memberof": "Log",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Get the log's multihash\n   * @returns {Promise<string>} Multihash of the Log as Base58 encoded string\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   await log.append(\"entryA1\")\n   *   await log.append(\"entryA2\")\n   *   await log.append(\"entryA3\")\n   *\n   *   console.log(await log.toMultihash())\n   * })()\n   */",
        "meta": {
            "range": [
                22052,
                22122
            ],
            "filename": "log.js",
            "lineno": 685,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003474",
                "name": "Log#toMultihash",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Get the log's multihash",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<string>"
                    ]
                },
                "description": "Multihash of the Log as Base58 encoded string"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  await log.append(\"entryA1\")\n  await log.append(\"entryA2\")\n  await log.append(\"entryA3\")\n\n  console.log(await log.toMultihash())\n})()"
        ],
        "name": "toMultihash",
        "longname": "Log#toMultihash",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * On Progress Callback\n   *\n   * @callback onProgressCallback\n   * @param {String} hash\n   * @param {Entry} entry\n   * @param {Number} depth\n   */",
        "meta": {
            "filename": "log.js",
            "lineno": 689,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {}
        },
        "description": "On Progress Callback",
        "kind": "typedef",
        "name": "onProgressCallback",
        "type": {
            "names": [
                "function"
            ]
        },
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "hash"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "name": "entry"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "name": "depth"
            }
        ],
        "longname": "onProgressCallback",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Create a log from multihash\n   *\n   * @param {IPFS}   ipfs        An IPFS instance\n   * @param {AccessController} access AccessController object for the Log\n   * @param {Identity} identity The identity of the owner of the log\n   * @param {string} hash        Multihash (as a Base58 encoded string) to create the log from\n   * @param {Number} length [length=-1] How many items to include in the log\n   * @param {Entry} exclude Entries to ex;lude from the log\n   * @param {onProgressCallback} onProgressCallback On Progress Callback\n   * @return {Promise<Log>} New Log\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   await log.append(\"entryA1\")\n   *   await log.append(\"entryA2\")\n   *   await log.append(\"entryA3\")\n   *\n   *   var multihash = await log.toMultihash();\n   *   var logFromHash = await Log.fromMultihash(ipfs, accessController, identity, multihash)\n   *\n   *   console.log(logFromHash.values.map(e => e.payload))\n   * })()\n   */",
        "meta": {
            "range": [
                23396,
                23864
            ],
            "filename": "log.js",
            "lineno": 725,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003487",
                "name": "Log.fromMultihash",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "hash",
                    "length",
                    "exclude",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a log from multihash",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "AccessController"
                    ]
                },
                "description": "AccessController object for the Log",
                "name": "access"
            },
            {
                "type": {
                    "names": [
                        "Identity"
                    ]
                },
                "description": "The identity of the owner of the log",
                "name": "identity"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Multihash (as a Base58 encoded string) to create the log from",
                "name": "hash"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "[length=-1] How many items to include in the log",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "description": "Entries to ex;lude from the log",
                "name": "exclude"
            },
            {
                "type": {
                    "names": [
                        "onProgressCallback"
                    ]
                },
                "description": "On Progress Callback",
                "name": "onProgressCallback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                },
                "description": "New Log"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  await log.append(\"entryA1\")\n  await log.append(\"entryA2\")\n  await log.append(\"entryA3\")\n\n  var multihash = await log.toMultihash();\n  var logFromHash = await Log.fromMultihash(ipfs, accessController, identity, multihash)\n\n  console.log(logFromHash.values.map(e => e.payload))\n})()"
        ],
        "name": "fromMultihash",
        "longname": "Log.fromMultihash",
        "kind": "function",
        "memberof": "Log",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23690,
                23771
            ],
            "filename": "log.js",
            "lineno": 730,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003524",
                "name": "data",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * On Progress Callback\n   *\n   * @callback onProgressCallbackWithParent\n   * @param {String} hash\n   * @param {Entry} entry\n   * @param {Entry} parent\n   * @param {Number} depth\n   */",
        "meta": {
            "filename": "log.js",
            "lineno": 734,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {}
        },
        "description": "On Progress Callback",
        "kind": "typedef",
        "name": "onProgressCallbackWithParent",
        "type": {
            "names": [
                "function"
            ]
        },
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "hash"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "name": "entry"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "name": "parent"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "name": "depth"
            }
        ],
        "longname": "onProgressCallbackWithParent",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Create a log from a single entry's multihash\n   * @param {IPFS}   ipfs        An IPFS instance\n   * @param {AccessController} access AccessController instance for the log\n   * @param {Identity} identity Identity object for the hash\n   * @param {string} hash        Multihash (as a Base58 encoded string) of the Entry from which to create the log from\n   * @param {Number} id   the ID of the new log\n   * @param {Number} [length=-1] How many entries to include in the log\n   * @param {Array<Entry>} exclude entries to exclude from the new log\n   * @param {onProgressCallback} onProgressCallback On Progress Callback\n   * @return {Promise<Log>}      New Log\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   * })()\n   */",
        "meta": {
            "range": [
                24943,
                25391
            ],
            "filename": "log.js",
            "lineno": 762,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003554",
                "name": "Log.fromEntryHash",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "hash",
                    "id",
                    "length",
                    "exclude",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a log from a single entry's multihash",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "AccessController"
                    ]
                },
                "description": "AccessController instance for the log",
                "name": "access"
            },
            {
                "type": {
                    "names": [
                        "Identity"
                    ]
                },
                "description": "Identity object for the hash",
                "name": "identity"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Multihash (as a Base58 encoded string) of the Entry from which to create the log from",
                "name": "hash"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "the ID of the new log",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "optional": true,
                "defaultvalue": -1,
                "description": "How many entries to include in the log",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "entries to exclude from the new log",
                "name": "exclude"
            },
            {
                "type": {
                    "names": [
                        "onProgressCallback"
                    ]
                },
                "description": "On Progress Callback",
                "name": "onProgressCallback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                },
                "description": "New Log"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n})()"
        ],
        "name": "fromEntryHash",
        "longname": "Log.fromEntryHash",
        "kind": "function",
        "memberof": "Log",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                25242,
                25327
            ],
            "filename": "log.js",
            "lineno": 767,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003589",
                "name": "data",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Create a log from a Log Snapshot JSON\n   * @param {IPFS} ipfs          An IPFS instance\n   * @param {AccessController} access AccessController instance for the log\n   * @param {Identity} identity Identity object for the hash\n   * @param {Object} json        Log snapshot as JSON object\n   * @param {Number} [length=-1] How many entries to include in the log\n   * @param {Number} timeout number of milliseconds to time out in\n   * @param {onProgressCallback} onProgressCallback On progress callback\n   * @return {Promise<Log>}      New Log\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   * })()\n   */",
        "meta": {
            "range": [
                26159,
                26526
            ],
            "filename": "log.js",
            "lineno": 788,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003612",
                "name": "Log.fromJSON",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "json",
                    "length",
                    "timeout",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a log from a Log Snapshot JSON",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "AccessController"
                    ]
                },
                "description": "AccessController instance for the log",
                "name": "access"
            },
            {
                "type": {
                    "names": [
                        "Identity"
                    ]
                },
                "description": "Identity object for the hash",
                "name": "identity"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Log snapshot as JSON object",
                "name": "json"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "optional": true,
                "defaultvalue": -1,
                "description": "How many entries to include in the log",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "number of milliseconds to time out in",
                "name": "timeout"
            },
            {
                "type": {
                    "names": [
                        "onProgressCallback"
                    ]
                },
                "description": "On progress callback",
                "name": "onProgressCallback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                },
                "description": "New Log"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n})()"
        ],
        "name": "fromJSON",
        "longname": "Log.fromJSON",
        "kind": "function",
        "memberof": "Log",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                26381,
                26457
            ],
            "filename": "log.js",
            "lineno": 792,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003637",
                "name": "data",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Create a new log from an Entry instance\n   * @param {IPFS}                ipfs          An IPFS instance\n   * @param {AccessController} access AccessController instance for the log\n   * @param {Identity} identity Identity object for the hash\n   * @param {Entry|Array<Entry>} sourceEntries An Entry or an array of entries to fetch a log from\n   * @param {Number}              [length=-1]   How many entries to include. Default: infinite.\n   * @param {Array<Entry|string>} [exclude]     Array of entries or hashes or entries to not fetch (foe eg. cached entries)\n   * @param {onProgressCallback} onProgressCallback On progress callback\n   * @return {Promise<Log>}       New Log\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   * })()\n   */",
        "meta": {
            "range": [
                27431,
                27904
            ],
            "filename": "log.js",
            "lineno": 813,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003661",
                "name": "Log.fromEntry",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "sourceEntries",
                    "length",
                    "exclude",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a new log from an Entry instance",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "AccessController"
                    ]
                },
                "description": "AccessController instance for the log",
                "name": "access"
            },
            {
                "type": {
                    "names": [
                        "Identity"
                    ]
                },
                "description": "Identity object for the hash",
                "name": "identity"
            },
            {
                "type": {
                    "names": [
                        "Entry",
                        "Array.<Entry>"
                    ]
                },
                "description": "An Entry or an array of entries to fetch a log from",
                "name": "sourceEntries"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "optional": true,
                "defaultvalue": -1,
                "description": "How many entries to include. Default: infinite.",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "Array.<(Entry|string)>"
                    ]
                },
                "optional": true,
                "description": "Array of entries or hashes or entries to not fetch (foe eg. cached entries)",
                "name": "exclude"
            },
            {
                "type": {
                    "names": [
                        "onProgressCallback"
                    ]
                },
                "description": "On progress callback",
                "name": "onProgressCallback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                },
                "description": "New Log"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n})()"
        ],
        "name": "fromEntry",
        "longname": "Log.fromEntry",
        "kind": "function",
        "memberof": "Log",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                27749,
                27835
            ],
            "filename": "log.js",
            "lineno": 818,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003695",
                "name": "data",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Find heads from a collection of entries\n   *\n   * @description\n   * Finds entries that are the heads of this collection,\n   * ie. entries that are not referenced by other entries\n   *\n   * @param {Array<Entry>} entries Entries to search heads from\n   * @returns {Array<Entry>} entryHash\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   * })()\n   */",
        "meta": {
            "range": [
                28420,
                28823
            ],
            "filename": "log.js",
            "lineno": 838,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003719",
                "name": "Log.findHeads",
                "type": "MethodDefinition",
                "paramnames": [
                    "entries"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Finds entries that are the heads of this collection,\nie. entries that are not referenced by other entries",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "Entries to search heads from",
                "name": "entries"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "entryHash"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n})()"
        ],
        "name": "findHeads",
        "longname": "Log.findHeads",
        "kind": "function",
        "memberof": "Log",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28457,
                28611
            ],
            "filename": "log.js",
            "lineno": 839,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003725",
                "name": "indexReducer",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "addToResult": "<anonymous>~indexReducer~addToResult",
                "": null
            }
        },
        "undocumented": true,
        "name": "indexReducer",
        "longname": "<anonymous>~indexReducer",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28510,
                28550
            ],
            "filename": "log.js",
            "lineno": 840,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003734",
                "name": "addToResult",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "res[undefined]": "<anonymous>~indexReducer~addToResult.res[undefined]"
            }
        },
        "undocumented": true,
        "name": "addToResult",
        "longname": "<anonymous>~indexReducer~addToResult",
        "kind": "function",
        "memberof": "<anonymous>~indexReducer",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28530,
                28549
            ],
            "filename": "log.js",
            "lineno": 840,
            "columnno": 30,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003738",
                "name": "res[undefined]",
                "type": "MemberExpression",
                "value": "entry.hash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "res[undefined]",
        "longname": "<anonymous>~indexReducer~addToResult.res[undefined]",
        "kind": "member",
        "memberof": "<anonymous>~indexReducer~addToResult",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28621,
                28661
            ],
            "filename": "log.js",
            "lineno": 845,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003756",
                "name": "items",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "items",
        "longname": "<anonymous>~items",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28671,
                28712
            ],
            "filename": "log.js",
            "lineno": 847,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003765",
                "name": "exists",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "exists",
        "longname": "<anonymous>~exists",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                28721,
                28767
            ],
            "filename": "log.js",
            "lineno": 848,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003777",
                "name": "compareIds",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "compareIds",
        "longname": "<anonymous>~compareIds",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Find entries that point to another entry that is not in the input array\n   *\n   * @param {Array<Entry>} entries entried to find tails from\n   *\n   * @returns {Array<Entry>} unique tail entries\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   * })()\n   */",
        "meta": {
            "range": [
                29245,
                30777
            ],
            "filename": "log.js",
            "lineno": 866,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003803",
                "name": "Log.findTails",
                "type": "MethodDefinition",
                "paramnames": [
                    "entries"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Find entries that point to another entry that is not in the input array",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "entried to find tails from",
                "name": "entries"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "unique tail entries"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n})()"
        ],
        "name": "findTails",
        "longname": "Log.findTails",
        "kind": "function",
        "memberof": "Log",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29321,
                29338
            ],
            "filename": "log.js",
            "lineno": 868,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003809",
                "name": "reverseIndex",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "reverseIndex",
        "longname": "<anonymous>~reverseIndex",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29413,
                29427
            ],
            "filename": "log.js",
            "lineno": 870,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003813",
                "name": "nullIndex",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "nullIndex",
        "longname": "<anonymous>~nullIndex",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29484,
                29495
            ],
            "filename": "log.js",
            "lineno": 872,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003817",
                "name": "hashes",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "hashes",
        "longname": "<anonymous>~hashes",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29538,
                29548
            ],
            "filename": "log.js",
            "lineno": 874,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003821",
                "name": "nexts",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "nexts",
        "longname": "<anonymous>~nexts",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29558,
                30059
            ],
            "filename": "log.js",
            "lineno": 876,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003825",
                "name": "addToIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "addToReverseIndex": "<anonymous>~addToIndex~addToReverseIndex",
                "": null,
                "nexts": "<anonymous>~addToIndex~nexts",
                "hashes[undefined]": "<anonymous>~hashes.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToIndex",
        "longname": "<anonymous>~addToIndex",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29657,
                29811
            ],
            "filename": "log.js",
            "lineno": 880,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003846",
                "name": "addToReverseIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "reverseIndex[undefined]": "<anonymous>~reverseIndex.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToReverseIndex",
        "longname": "<anonymous>~addToIndex~addToReverseIndex",
        "kind": "function",
        "memberof": "<anonymous>~addToIndex",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29751,
                29771
            ],
            "filename": "log.js",
            "lineno": 882,
            "columnno": 30,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003857",
                "name": "reverseIndex[undefined]",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~reverseIndex.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~reverseIndex",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                29956,
                29984
            ],
            "filename": "log.js",
            "lineno": 889,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003879",
                "name": "nexts",
                "type": "CallExpression",
                "funcscope": "<anonymous>~addToIndex",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "nexts",
        "longname": "<anonymous>~addToIndex~nexts",
        "kind": "member",
        "memberof": "<anonymous>~addToIndex",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                30032,
                30053
            ],
            "filename": "log.js",
            "lineno": 891,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003889",
                "name": "hashes[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~hashes.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~hashes",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                30128,
                30209
            ],
            "filename": "log.js",
            "lineno": 897,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003903",
                "name": "addUniques",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "addUniques",
        "longname": "<anonymous>~addUniques",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                30218,
                30255
            ],
            "filename": "log.js",
            "lineno": 898,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003919",
                "name": "exists",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "exists",
        "longname": "<anonymous>~exists",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                30264,
                30307
            ],
            "filename": "log.js",
            "lineno": 899,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003929",
                "name": "findFromReverseIndex",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "findFromReverseIndex",
        "longname": "<anonymous>~findFromReverseIndex",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                30372,
                30643
            ],
            "filename": "log.js",
            "lineno": 902,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003937",
                "name": "tails",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tails",
        "longname": "<anonymous>~tails",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Find the hashes to entries that are not in a collection\n   * but referenced by other entries\n   *\n   * @param {Array<Entry>} entries array of entries to find tails in\n   *\n   * @returns {Array<String>} hashes of tail entries\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   * })()\n   */",
        "meta": {
            "range": [
                31231,
                31700
            ],
            "filename": "log.js",
            "lineno": 925,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003968",
                "name": "Log.findTailHashes",
                "type": "MethodDefinition",
                "paramnames": [
                    "entries"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Find the hashes to entries that are not in a collection\nbut referenced by other entries",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "array of entries to find tails in",
                "name": "entries"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<String>"
                    ]
                },
                "description": "hashes of tail entries"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n})()"
        ],
        "name": "findTailHashes",
        "longname": "Log.findTailHashes",
        "kind": "function",
        "memberof": "Log",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31273,
                31284
            ],
            "filename": "log.js",
            "lineno": 926,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003974",
                "name": "hashes",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "hashes",
        "longname": "<anonymous>~hashes",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31293,
                31334
            ],
            "filename": "log.js",
            "lineno": 927,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003978",
                "name": "addToIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "hashes[undefined]": "<anonymous>~addToIndex.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToIndex",
        "longname": "<anonymous>~addToIndex",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31312,
                31333
            ],
            "filename": "log.js",
            "lineno": 927,
            "columnno": 27,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003982",
                "name": "hashes[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~addToIndex.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~addToIndex",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31343,
                31615
            ],
            "filename": "log.js",
            "lineno": 928,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003990",
                "name": "reduceTailHashes",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "addToResult": "<anonymous>~reduceTailHashes~addToResult",
                "": null
            }
        },
        "undocumented": true,
        "name": "reduceTailHashes",
        "longname": "<anonymous>~reduceTailHashes",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                31400,
                31544
            ],
            "filename": "log.js",
            "lineno": 929,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100003999",
                "name": "addToResult",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "addToResult",
        "longname": "<anonymous>~reduceTailHashes~addToResult",
        "kind": "function",
        "memberof": "<anonymous>~reduceTailHashes",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Shows the difference between two logs\n   *\n   * @param {Log} a the first log\n   * @param {Log} b the second log\n   *\n   * @returns {Log} The resultant log\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   * })()\n   */",
        "meta": {
            "range": [
                32084,
                32639
            ],
            "filename": "log.js",
            "lineno": 957,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004045",
                "name": "Log.difference",
                "type": "MethodDefinition",
                "paramnames": [
                    "a",
                    "b"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Shows the difference between two logs",
        "params": [
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "the first log",
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "the second log",
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "The resultant log"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n})()"
        ],
        "name": "difference",
        "longname": "Log.difference",
        "kind": "function",
        "memberof": "Log",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32119,
                32153
            ],
            "filename": "log.js",
            "lineno": 958,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004052",
                "name": "stack",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stack",
        "longname": "<anonymous>~stack",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32162,
                32176
            ],
            "filename": "log.js",
            "lineno": 959,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004062",
                "name": "traversed",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "traversed",
        "longname": "<anonymous>~traversed",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32185,
                32193
            ],
            "filename": "log.js",
            "lineno": 960,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004066",
                "name": "res",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "<anonymous>~res",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32205,
                32344
            ],
            "filename": "log.js",
            "lineno": 962,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004070",
                "name": "pushToStack",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "traversed[undefined]": "<anonymous>~traversed.undefined]"
            }
        },
        "undocumented": true,
        "name": "pushToStack",
        "longname": "<anonymous>~pushToStack",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32308,
                32330
            ],
            "filename": "log.js",
            "lineno": 965,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004095",
                "name": "traversed[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~traversed.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~traversed",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32389,
                32409
            ],
            "filename": "log.js",
            "lineno": 970,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004108",
                "name": "hash",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hash",
        "longname": "<anonymous>~hash",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32422,
                32441
            ],
            "filename": "log.js",
            "lineno": 971,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004115",
                "name": "entry",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entry",
        "longname": "<anonymous>~entry",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32506,
                32529
            ],
            "filename": "log.js",
            "lineno": 973,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004141",
                "name": "res[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "entry",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~res.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32538,
                32566
            ],
            "filename": "log.js",
            "lineno": 974,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004149",
                "name": "traversed[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~traversed.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~traversed",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32643,
                32663
            ],
            "filename": "log.js",
            "lineno": 982,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004167",
                "name": "module.exports",
                "type": "Identifier",
                "value": "Log",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                32664,
                32714
            ],
            "filename": "log.js",
            "lineno": 983,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004173",
                "name": "module.exports.AccessController",
                "type": "Identifier",
                "value": "AccessController",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "AccessController",
        "longname": "AccessController",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                54
            ],
            "filename": "log-sorting.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004185",
                "name": "Clock",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Clock",
        "longname": "Clock",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * Sort two entries as Last-Write-Wins (LWW)\n * @description  Last Write Wins is a conflict resolution strategy for sorting elements\n *               where the element with a greater clock (latest) is chosen as the winner\n * @param {Entry} [a] First entry\n * @param {Entry} [b] Second entry\n * @returns {int} 1 if a is latest, -1 if b is latest\n */",
        "meta": {
            "range": [
                409,
                947
            ],
            "filename": "log-sorting.js",
            "lineno": 13,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004190",
                "name": "LastWriteWins",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "a",
                    "b"
                ]
            },
            "vars": {
                "First": "LastWriteWins~First",
                "": null,
                "sortById": "LastWriteWins~sortById",
                "sortByEntryClocks": "LastWriteWins~sortByEntryClocks"
            }
        },
        "description": "Last Write Wins is a conflict resolution strategy for sorting elements\n              where the element with a greater clock (latest) is chosen as the winner",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "optional": true,
                "description": "First entry",
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "optional": true,
                "description": "Second entry",
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "int"
                    ]
                },
                "description": "1 if a is latest, -1 if b is latest"
            }
        ],
        "name": "LastWriteWins",
        "longname": "LastWriteWins",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                509,
                528
            ],
            "filename": "log-sorting.js",
            "lineno": 15,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004196",
                "name": "First",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "First",
        "longname": "LastWriteWins~First",
        "kind": "function",
        "memberof": "LastWriteWins",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                612,
                659
            ],
            "filename": "log-sorting.js",
            "lineno": 17,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004203",
                "name": "sortById",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "sortById",
        "longname": "LastWriteWins~sortById",
        "kind": "function",
        "memberof": "LastWriteWins",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                793,
                851
            ],
            "filename": "log-sorting.js",
            "lineno": 20,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004214",
                "name": "sortByEntryClocks",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "sortByEntryClocks",
        "longname": "LastWriteWins~sortByEntryClocks",
        "kind": "function",
        "memberof": "LastWriteWins",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Sort two entries by their clock time\n * @param {Entry} [a] First entry to compare\n * @param {Entry} [b] Second entry to compare\n * @param {function(a, b)} [resolveConflict] A function to call if entries are concurrent (happened at the same time). The function should take in two entries and return 1 if the first entry should be chosen and -1 if the second entry should be chosen.\n * @returns {int} 1 if a is greater, -1 if b is greater\n */",
        "meta": {
            "range": [
                1397,
                1685
            ],
            "filename": "log-sorting.js",
            "lineno": 32,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004229",
                "name": "SortByClocks",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "a",
                    "b",
                    "resolveConflict"
                ]
            },
            "vars": {
                "diff": "SortByClocks~diff"
            }
        },
        "description": "Sort two entries by their clock time",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "optional": true,
                "description": "First entry to compare",
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "optional": true,
                "description": "Second entry to compare",
                "name": "b"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "A function to call if entries are concurrent (happened at the same time). The function should take in two entries and return 1 if the first entry should be chosen and -1 if the second entry should be chosen.",
                "name": "resolveConflict"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "int"
                    ]
                },
                "description": "1 if a is greater, -1 if b is greater"
            }
        ],
        "name": "SortByClocks",
        "longname": "SortByClocks",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1477,
                1515
            ],
            "filename": "log-sorting.js",
            "lineno": 34,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004236",
                "name": "diff",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "diff",
        "longname": "SortByClocks~diff",
        "kind": "constant",
        "memberof": "SortByClocks",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * Sort two entries by their clock id\n * @param {Entry} [a] First entry to compare\n * @param {Entry} [b] Second entry to compare\n * @param {function(a, b)} [resolveConflict] A function to call if the clocks ids are the same. The function should take in two entries and return 1 if the first entry should be chosen and -1 if the second entry should be chosen.\n * @returns {int} 1 if a is greater, -1 if b is greater\n */",
        "meta": {
            "range": [
                2110,
                2350
            ],
            "filename": "log-sorting.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004258",
                "name": "SortByClockId",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "a",
                    "b",
                    "resolveConflict"
                ]
            }
        },
        "description": "Sort two entries by their clock id",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "optional": true,
                "description": "First entry to compare",
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "optional": true,
                "description": "Second entry to compare",
                "name": "b"
            },
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "A function to call if the clocks ids are the same. The function should take in two entries and return 1 if the first entry should be chosen and -1 if the second entry should be chosen.",
                "name": "resolveConflict"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "int"
                    ]
                },
                "description": "1 if a is greater, -1 if b is greater"
            }
        ],
        "name": "SortByClockId",
        "longname": "SortByClockId",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "/**\n * A wrapper function to throw an error if the results of a passed function return zero\n * @param {function(a, b)} [tiebreaker] The tiebreaker function to validate.\n * @returns {function(a, b)} 1 if a is greater, -1 if b is greater\n * @throws {Error} if func ever returns 0\n */",
        "meta": {
            "range": [
                2634,
                2956
            ],
            "filename": "log-sorting.js",
            "lineno": 61,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004296",
                "name": "NoZeroes",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "func"
                ]
            },
            "vars": {
                "msg": "NoZeroes~msg",
                "comparator": "NoZeroes~comparator",
                "": null
            }
        },
        "description": "A wrapper function to throw an error if the results of a passed function return zero",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "description": "The tiebreaker function to validate.",
                "name": "tiebreaker"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "1 if a is greater, -1 if b is greater"
            }
        ],
        "exceptions": [
            {
                "type": {
                    "names": [
                        "Error"
                    ]
                },
                "description": "if func ever returns 0"
            }
        ],
        "name": "NoZeroes",
        "longname": "NoZeroes",
        "kind": "function",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2669,
                2764
            ],
            "filename": "log-sorting.js",
            "lineno": 62,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004301",
                "name": "msg",
                "type": "TemplateLiteral",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "msg",
        "longname": "NoZeroes~msg",
        "kind": "constant",
        "memberof": "NoZeroes",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2774,
                2933
            ],
            "filename": "log-sorting.js",
            "lineno": 64,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004310",
                "name": "comparator",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "result": "NoZeroes~comparator~result"
            }
        },
        "undocumented": true,
        "name": "comparator",
        "longname": "NoZeroes~comparator",
        "kind": "function",
        "memberof": "NoZeroes",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2849,
                2868
            ],
            "filename": "log-sorting.js",
            "lineno": 66,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004317",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "NoZeroes~comparator~result",
        "kind": "constant",
        "memberof": "NoZeroes~comparator",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2958,
                2993
            ],
            "filename": "log-sorting.js",
            "lineno": 74,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004337",
                "name": "exports.SortByClocks",
                "type": "Identifier",
                "value": "SortByClocks",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "SortByClocks",
        "longname": "SortByClocks",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2994,
                3031
            ],
            "filename": "log-sorting.js",
            "lineno": 75,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004343",
                "name": "exports.SortByClockId",
                "type": "Identifier",
                "value": "SortByClockId",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "SortByClockId",
        "longname": "SortByClockId",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3032,
                3069
            ],
            "filename": "log-sorting.js",
            "lineno": 76,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004349",
                "name": "exports.LastWriteWins",
                "type": "Identifier",
                "value": "LastWriteWins",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "LastWriteWins",
        "longname": "LastWriteWins",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3070,
                3097
            ],
            "filename": "log-sorting.js",
            "lineno": 77,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100004355",
                "name": "exports.NoZeroes",
                "type": "Identifier",
                "value": "NoZeroes",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "NoZeroes",
        "longname": "NoZeroes",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14,
                663
            ],
            "filename": "difference.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004364",
                "name": "difference",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "a",
                    "b",
                    "key"
                ]
            },
            "vars": {
                "processed": "difference~processed",
                "existing": "difference~existing",
                "addToIndex": "difference~addToIndex",
                "": null,
                "reducer": "difference~reducer"
            }
        },
        "undocumented": true,
        "name": "difference",
        "longname": "difference",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                85,
                99
            ],
            "filename": "difference.js",
            "lineno": 5,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004371",
                "name": "processed",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "processed",
        "longname": "difference~processed",
        "kind": "member",
        "memberof": "difference",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                106,
                119
            ],
            "filename": "difference.js",
            "lineno": 6,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004375",
                "name": "existing",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "existing",
        "longname": "difference~existing",
        "kind": "member",
        "memberof": "difference",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                172,
                225
            ],
            "filename": "difference.js",
            "lineno": 9,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004379",
                "name": "addToIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "existing[undefined]": "difference~addToIndex.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToIndex",
        "longname": "difference~addToIndex",
        "kind": "function",
        "memberof": "difference",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                191,
                224
            ],
            "filename": "difference.js",
            "lineno": 9,
            "columnno": 25,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004383",
                "name": "existing[undefined]",
                "type": "Literal",
                "funcscope": "difference",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "difference~addToIndex.undefined]",
        "kind": "member",
        "memberof": "difference~addToIndex",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                317,
                629
            ],
            "filename": "difference.js",
            "lineno": 13,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004400",
                "name": "reducer",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "isInFirst": "difference~reducer~isInFirst",
                "hasBeenProcessed": "difference~reducer~hasBeenProcessed",
                "processed[undefined]": "difference~processed.undefined]"
            }
        },
        "undocumented": true,
        "name": "reducer",
        "longname": "difference~reducer",
        "kind": "function",
        "memberof": "difference",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                353,
                413
            ],
            "filename": "difference.js",
            "lineno": 14,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004407",
                "name": "isInFirst",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isInFirst",
        "longname": "difference~reducer~isInFirst",
        "kind": "member",
        "memberof": "difference~reducer",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                422,
                490
            ],
            "filename": "difference.js",
            "lineno": 15,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004420",
                "name": "hasBeenProcessed",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hasBeenProcessed",
        "longname": "difference~reducer~hasBeenProcessed",
        "kind": "member",
        "memberof": "difference~reducer",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                562,
                604
            ],
            "filename": "difference.js",
            "lineno": 18,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004446",
                "name": "processed[undefined]",
                "type": "Literal",
                "funcscope": "difference",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "difference~processed.undefined]",
        "kind": "member",
        "memberof": "difference~processed",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                665,
                692
            ],
            "filename": "difference.js",
            "lineno": 26,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004466",
                "name": "module.exports",
                "type": "Identifier",
                "value": "difference",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14,
                260
            ],
            "filename": "find-uniques.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004475",
                "name": "findUniques",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "key"
                ]
            },
            "vars": {
                "uniques": "findUniques~uniques",
                "get": "findUniques~get",
                "": null,
                "addToIndex": "findUniques~addToIndex"
            }
        },
        "undocumented": true,
        "name": "findUniques",
        "longname": "findUniques",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                95,
                107
            ],
            "filename": "find-uniques.js",
            "lineno": 5,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004481",
                "name": "uniques",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "uniques",
        "longname": "findUniques~uniques",
        "kind": "member",
        "memberof": "findUniques",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                114,
                135
            ],
            "filename": "find-uniques.js",
            "lineno": 6,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004485",
                "name": "get",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "get",
        "longname": "findUniques~get",
        "kind": "function",
        "memberof": "findUniques",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                142,
                191
            ],
            "filename": "find-uniques.js",
            "lineno": 7,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004493",
                "name": "addToIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "uniques[undefined]": "findUniques~addToIndex.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToIndex",
        "longname": "findUniques~addToIndex",
        "kind": "function",
        "memberof": "findUniques",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                161,
                190
            ],
            "filename": "find-uniques.js",
            "lineno": 7,
            "columnno": 25,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004497",
                "name": "uniques[undefined]",
                "type": "Identifier",
                "funcscope": "findUniques",
                "value": "e",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "findUniques~addToIndex.undefined]",
        "kind": "member",
        "memberof": "findUniques~addToIndex",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                262,
                290
            ],
            "filename": "find-uniques.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004524",
                "name": "module.exports",
                "type": "Identifier",
                "value": "findUniques",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                56
            ],
            "filename": "index.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004534",
                "name": "difference",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "difference",
        "longname": "difference",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                63,
                102
            ],
            "filename": "index.js",
            "lineno": 4,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004540",
                "name": "findUniques",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "findUniques",
        "longname": "findUniques",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                109,
                144
            ],
            "filename": "index.js",
            "lineno": 5,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004546",
                "name": "isDefined",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isDefined",
        "longname": "isDefined",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                146,
                207
            ],
            "filename": "index.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004552",
                "name": "module.exports",
                "type": "ObjectExpression",
                "value": "{\"difference\":\"\",\"findUniques\":\"\",\"isDefined\":\"\"}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                167,
                177
            ],
            "filename": "index.js",
            "lineno": 8,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004557",
                "name": "difference",
                "type": "Identifier",
                "value": "difference"
            }
        },
        "undocumented": true,
        "name": "difference",
        "longname": "module.exports.difference",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                181,
                192
            ],
            "filename": "index.js",
            "lineno": 9,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004559",
                "name": "findUniques",
                "type": "Identifier",
                "value": "findUniques"
            }
        },
        "undocumented": true,
        "name": "findUniques",
        "longname": "module.exports.findUniques",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                196,
                205
            ],
            "filename": "index.js",
            "lineno": 10,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004561",
                "name": "isDefined",
                "type": "Identifier",
                "value": "isDefined"
            }
        },
        "undocumented": true,
        "name": "isDefined",
        "longname": "module.exports.isDefined",
        "kind": "member",
        "memberof": "module.exports",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                74
            ],
            "filename": "is-defined.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004568",
                "name": "isDefined",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "isDefined",
        "longname": "isDefined",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                76,
                102
            ],
            "filename": "is-defined.js",
            "lineno": 5,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src/utils",
            "code": {
                "id": "astnode100004580",
                "name": "module.exports",
                "type": "Identifier",
                "value": "isDefined",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "kind": "package",
        "longname": "package:undefined",
        "files": [
            "/home/mark/Projects/orbitdb/ipfs-log/src/default-access-controller.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/entry-io.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/entry.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/g-set.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/lamport-clock.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/log-errors.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/log-io.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/log.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/log-sorting.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/utils/difference.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/utils/find-uniques.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/utils/index.js",
            "/home/mark/Projects/orbitdb/ipfs-log/src/utils/is-defined.js"
        ]
    }
]
