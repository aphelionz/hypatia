[
    {
        "comment": "",
        "meta": {
            "range": [
                20,
                43
            ],
            "filename": "log.js",
            "lineno": 3,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000005",
                "name": "pMap",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "pMap",
        "longname": "pMap",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                50,
                75
            ],
            "filename": "log.js",
            "lineno": 4,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000011",
                "name": "GSet",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "GSet",
        "longname": "GSet",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                82,
                108
            ],
            "filename": "log.js",
            "lineno": 5,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000017",
                "name": "Entry",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Entry",
        "longname": "Entry",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                115,
                142
            ],
            "filename": "log.js",
            "lineno": 6,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000023",
                "name": "LogIO",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LogIO",
        "longname": "LogIO",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                149,
                183
            ],
            "filename": "log.js",
            "lineno": 7,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000029",
                "name": "LogError",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LogError",
        "longname": "LogError",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                190,
                224
            ],
            "filename": "log.js",
            "lineno": 8,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000035",
                "name": "Clock",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Clock",
        "longname": "Clock",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                233,
                246
            ],
            "filename": "log.js",
            "lineno": 9,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000043",
                "name": "LastWriteWins",
                "type": "Identifier",
                "value": "LastWriteWins"
            }
        },
        "undocumented": true,
        "name": "LastWriteWins",
        "longname": "LastWriteWins",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                282,
                339
            ],
            "filename": "log.js",
            "lineno": 10,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000049",
                "name": "AccessController",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "AccessController",
        "longname": "AccessController",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                346,
                402
            ],
            "filename": "log.js",
            "lineno": 11,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000055",
                "name": "IdentityProvider",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "IdentityProvider",
        "longname": "IdentityProvider",
        "kind": "constant",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                411,
                420
            ],
            "filename": "log.js",
            "lineno": 12,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000063",
                "name": "isDefined",
                "type": "Identifier",
                "value": "isDefined"
            }
        },
        "undocumented": true,
        "name": "isDefined",
        "longname": "isDefined",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                422,
                433
            ],
            "filename": "log.js",
            "lineno": 12,
            "columnno": 19,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000065",
                "name": "findUniques",
                "type": "Identifier",
                "value": "findUniques"
            }
        },
        "undocumented": true,
        "name": "findUniques",
        "longname": "findUniques",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                464,
                512
            ],
            "filename": "log.js",
            "lineno": 14,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000071",
                "name": "randomId",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "randomId",
        "longname": "randomId",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                519,
                540
            ],
            "filename": "log.js",
            "lineno": 15,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000083",
                "name": "getHash",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "getHash",
        "longname": "getHash",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                547,
                586
            ],
            "filename": "log.js",
            "lineno": 16,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000091",
                "name": "flatMap",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "flatMap",
        "longname": "flatMap",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                593,
                630
            ],
            "filename": "log.js",
            "lineno": 17,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000102",
                "name": "getNextPointers",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "getNextPointers",
        "longname": "getNextPointers",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                637,
                702
            ],
            "filename": "log.js",
            "lineno": 18,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000110",
                "name": "maxClockTimeReducer",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "maxClockTimeReducer",
        "longname": "maxClockTimeReducer",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                709,
                784
            ],
            "filename": "log.js",
            "lineno": 19,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000126",
                "name": "uniqueEntriesReducer",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "res[undefined]": null
            }
        },
        "undocumented": true,
        "name": "uniqueEntriesReducer",
        "longname": "uniqueEntriesReducer",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                750,
                769
            ],
            "filename": "log.js",
            "lineno": 20,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000133",
                "name": "res[undefined]",
                "type": "Identifier",
                "value": "acc",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "res[undefined]",
        "longname": "res[undefined]",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                786,
                23301
            ],
            "filename": "log.js",
            "lineno": 24,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000142",
                "name": "Log",
                "type": "ClassDeclaration",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "logId",
                    "entries",
                    "heads",
                    "clock"
                ]
            }
        },
        "undocumented": true,
        "name": "Log",
        "longname": "Log",
        "kind": "class",
        "scope": "global"
    },
    {
        "comment": "/**\n   * @description\n   * Log implements a G-Set CRDT and adds ordering\n   * Create a new Log instance\n   *\n   * From:\n   * \"A comprehensive study of Convergent and Commutative Replicated Data Types\"\n   * https://hal.inria.fr/inria-00555588\n   *\n   * @constructor\n   *\n   * @example\n   * const IPFS = require(\"ipfs\")\n   * const Log = require(\"../src/log\")\n   * const { AccessController, IdentityProvider } = require(\"../src/log\")\n   * const Keystore = require('orbit-db-keystore')\n   * const Entry = require(\"../src/entry\")\n   * const Clock = require('../src/lamport-clock')\n   *\n   * const accessController = new AccessController()\n   * const ipfs = new IPFS();\n   * const keystore = Keystore.create(\"../test/fixtures/keys\")\n   * const identitySignerFn = async (id, data) => {\n   *   const key = await keystore.getKey(id)\n   *   return keystore.sign(key, data)\n   * }\n   *\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   // console.log(Object.keys(log))\n   * })()\n   *\n   * @param  {IPFS}           [ipfs]          An IPFS instance\n   * @param  {Object}         [access]        AccessController (./default-access-controller)\n   * @param  {Object}         [identity]      Identity (https://github.com/orbitdb/orbit-db-identity-provider/blob/master/src/identity.js)\n   * @param  {String}         [logId]         ID of the log\n   * @param  {Array<Entry>}   [entries]       An Array of Entries from which to create the log\n   * @param  {Array<Entry>}   [heads]         Set the heads of the log\n   * @param  {Clock}          [clock]         Set the clock of the log\n   * @return {Log}                            Log\n   */",
        "meta": {
            "range": [
                2577,
                4300
            ],
            "filename": "log.js",
            "lineno": 68,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000146",
                "name": "Log",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "logId",
                    "entries",
                    "heads",
                    "clock"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Log implements a G-Set CRDT and adds ordering\nCreate a new Log instance\n\nFrom:\n\"A comprehensive study of Convergent and Commutative Replicated Data Types\"\nhttps://hal.inria.fr/inria-00555588",
        "kind": "class",
        "examples": [
            "const IPFS = require(\"ipfs\")\nconst Log = require(\"../src/log\")\nconst { AccessController, IdentityProvider } = require(\"../src/log\")\nconst Keystore = require('orbit-db-keystore')\nconst Entry = require(\"../src/entry\")\nconst Clock = require('../src/lamport-clock')\n\nconst accessController = new AccessController()\nconst ipfs = new IPFS();\nconst keystore = Keystore.create(\"../test/fixtures/keys\")\nconst identitySignerFn = async (id, data) => {\n  const key = await keystore.getKey(id)\n  return keystore.sign(key, data)\n}\n\n(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  // console.log(Object.keys(log))\n})()"
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "optional": true,
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "description": "AccessController (./default-access-controller)",
                "name": "access"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "optional": true,
                "description": "Identity (https://github.com/orbitdb/orbit-db-identity-provider/blob/master/src/identity.js)",
                "name": "identity"
            },
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "optional": true,
                "description": "ID of the log",
                "name": "logId"
            },
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "optional": true,
                "description": "An Array of Entries from which to create the log",
                "name": "entries"
            },
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "optional": true,
                "description": "Set the heads of the log",
                "name": "heads"
            },
            {
                "type": {
                    "names": [
                        "Clock"
                    ]
                },
                "optional": true,
                "description": "Set the clock of the log",
                "name": "clock"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "Log"
            }
        ],
        "name": "Log",
        "longname": "Log",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3181,
                3201
            ],
            "filename": "log.js",
            "lineno": 91,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000226",
                "name": "this._storage",
                "type": "Identifier",
                "value": "ipfs",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_storage",
        "longname": "Log#_storage",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3206,
                3236
            ],
            "filename": "log.js",
            "lineno": 92,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000232",
                "name": "this._id",
                "type": "LogicalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_id",
        "longname": "Log#_id",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3267,
                3288
            ],
            "filename": "log.js",
            "lineno": 95,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000241",
                "name": "this._access",
                "type": "Identifier",
                "value": "access",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_access",
        "longname": "Log#_access",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3309,
                3334
            ],
            "filename": "log.js",
            "lineno": 97,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000247",
                "name": "this._identity",
                "type": "Identifier",
                "value": "identity",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_identity",
        "longname": "Log#_identity",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3381,
                3404
            ],
            "filename": "log.js",
            "lineno": 100,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000253",
                "name": "entries",
                "type": "LogicalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "entries",
        "longname": "<anonymous>~entries",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3409,
                3468
            ],
            "filename": "log.js",
            "lineno": 101,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000259",
                "name": "this._entryIndex",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_entryIndex",
        "longname": "Log#_entryIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3520,
                3559
            ],
            "filename": "log.js",
            "lineno": 104,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000270",
                "name": "heads",
                "type": "LogicalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "heads",
        "longname": "<anonymous>~heads",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3564,
                3621
            ],
            "filename": "log.js",
            "lineno": 105,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000280",
                "name": "this._headsIndex",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_headsIndex",
        "longname": "Log#_headsIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3673,
                3694
            ],
            "filename": "log.js",
            "lineno": 108,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000291",
                "name": "this._nextsIndex",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_nextsIndex",
        "longname": "Log#_nextsIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3705,
                3779
            ],
            "filename": "log.js",
            "lineno": 109,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000297",
                "name": "addToNextsIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "addToNextsIndex",
        "longname": "<anonymous>~addToNextsIndex",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3749,
                3777
            ],
            "filename": "log.js",
            "lineno": 109,
            "columnno": 54,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000309",
                "name": "this._nextsIndex[undefined]",
                "type": "MemberExpression",
                "value": "e.hash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_nextsIndex[undefined]",
        "longname": "<anonymous>#_nextsIndex[undefined]",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3889,
                3932
            ],
            "filename": "log.js",
            "lineno": 113,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000325",
                "name": "this._length",
                "type": "ConditionalExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_length",
        "longname": "Log#_length",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3965,
                4050
            ],
            "filename": "log.js",
            "lineno": 116,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000336",
                "name": "maxTime",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "maxTime",
        "longname": "<anonymous>~maxTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4238,
                4296
            ],
            "filename": "log.js",
            "lineno": 120,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000357",
                "name": "this._clock",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_clock",
        "longname": "Log#_clock",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Returns the ID of the log\n   *\n   * @returns {string} the ID of the log\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *   console.log(log.id) // default uses JS microtime\n   *\n   *   var log2 = new Log(ipfs, accessController, identity, \"MyLogID\")\n   *   console.log(log2.id) // or you can specify your own\n   * })()\n   */",
        "meta": {
            "range": [
                4792,
                4827
            ],
            "filename": "log.js",
            "lineno": 138,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000369",
                "name": "Log#id",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the ID of the log",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "the ID of the log"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n  console.log(log.id) // default uses JS microtime\n\n  var log2 = new Log(ipfs, accessController, identity, \"MyLogID\")\n  console.log(log2.id) // or you can specify your own\n})()"
        ],
        "name": "id",
        "longname": "Log#id",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns the clock of the log\n   *\n   * @returns {string} The log's LamportClock\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *   console.log(log.clock)\n   * })()\n   */",
        "meta": {
            "range": [
                5166,
                5207
            ],
            "filename": "log.js",
            "lineno": 154,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000377",
                "name": "Log#clock",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the clock of the log",
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "The log's LamportClock"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n  console.log(log.clock)\n})()"
        ],
        "name": "clock",
        "longname": "Log#clock",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns the length of the log\n   * @return {Number} length of the log\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *   console.log(log.length)\n   *\n   *   var entry = await Entry.create(ipfs, identity, '1', 'entry1', [], new Clock('1', 0))\n   *   await log.append(entry)\n   *   console.log(log.length)\n   * })()\n   *\n   */",
        "meta": {
            "range": [
                5701,
                5744
            ],
            "filename": "log.js",
            "lineno": 174,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000385",
                "name": "Log#length",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the length of the log",
        "returns": [
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "length of the log"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n  console.log(log.length)\n\n  var entry = await Entry.create(ipfs, identity, '1', 'entry1', [], new Clock('1', 0))\n  await log.append(entry)\n  console.log(log.length)\n})()"
        ],
        "name": "length",
        "longname": "Log#length",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns the values in the log\n   * @returns {Array<Entry>} all values of the log sorted by LastWriteWins\n   *\n   * @example\n   * (async () => {\n   *   var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n   *   var log = new Log(ipfs, accessController, identity)\n   *\n   *   var entry = await Entry.create(ipfs, identity, '1', 'entry1', [], new Clock('1', 0))\n   *   await log.append(entry)\n   *   console.log(log.values)\n   * })()\n   */",
        "meta": {
            "range": [
                6237,
                6385
            ],
            "filename": "log.js",
            "lineno": 192,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000393",
                "name": "Log#values",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the values in the log",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "all values of the log sorted by LastWriteWins"
            }
        ],
        "examples": [
            "(async () => {\n  var identity = await IdentityProvider.createIdentity(keystore, 'username', identitySignerFn)\n  var log = new Log(ipfs, accessController, identity)\n\n  var entry = await Entry.create(ipfs, identity, '1', 'entry1', [], new Clock('1', 0))\n  await log.append(entry)\n  console.log(log.values)\n})()"
        ],
        "name": "values",
        "longname": "Log#values",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns an array of heads as multihashes\n   * @returns {Array<string>} values of the log head(s)\n   */",
        "meta": {
            "range": [
                6503,
                6570
            ],
            "filename": "log.js",
            "lineno": 201,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000409",
                "name": "Log#heads",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns an array of heads as multihashes",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ]
                },
                "description": "values of the log head(s)"
            }
        ],
        "name": "heads",
        "longname": "Log#heads",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns an array of Entry objects that reference entries which\n   * are not in the log currently\n   * @returns {Array<Entry>} values of the log tail(s)s\n   */",
        "meta": {
            "range": [
                6744,
                6800
            ],
            "filename": "log.js",
            "lineno": 210,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000423",
                "name": "Log#tails",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns an array of Entry objects that reference entries which\nare not in the log currently",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "values of the log tail(s)s"
            }
        ],
        "name": "tails",
        "longname": "Log#tails",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns an array of multihashes that are referenced by entries which\n   * are not in the log currently\n   * @returns {Array<string>} Array of multihashes\n   */",
        "meta": {
            "range": [
                6975,
                7041
            ],
            "filename": "log.js",
            "lineno": 219,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000435",
                "name": "Log#tailHashes",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns an array of multihashes that are referenced by entries which\nare not in the log currently",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<string>"
                    ]
                },
                "description": "Array of multihashes"
            }
        ],
        "name": "tailHashes",
        "longname": "Log#tailHashes",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Find an entry\n   * @param {string} [hash] The Multihash of the entry as Base58 encoded string\n   * @returns {Entry|undefined} hash of the entry index\n   */",
        "meta": {
            "range": [
                7212,
                7262
            ],
            "filename": "log.js",
            "lineno": 228,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000447",
                "name": "Log#get",
                "type": "MethodDefinition",
                "paramnames": [
                    "hash"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Find an entry",
        "params": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "optional": true,
                "description": "The Multihash of the entry as Base58 encoded string",
                "name": "hash"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Entry",
                        "undefined"
                    ]
                },
                "description": "hash of the entry index"
            }
        ],
        "name": "get",
        "longname": "Log#get",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Verify that the log contains the entry you're seeking\n   * @param {Entry} entry the entry you're looking to verify\n   * @returns {Boolean} `true` or `false` if the log contains the entry\n   */",
        "meta": {
            "range": [
                7470,
                7550
            ],
            "filename": "log.js",
            "lineno": 237,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000458",
                "name": "Log#has",
                "type": "MethodDefinition",
                "paramnames": [
                    "entry"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Verify that the log contains the entry you're seeking",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "description": "the entry you're looking to verify",
                "name": "entry"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                },
                "description": "`true` or `false` if the log contains the entry"
            }
        ],
        "name": "has",
        "longname": "Log#has",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Follow the pointers and load the log into memory for processing\n   *\n   * @param {Array} rootEntries entry or entries to start from\n   * @param {Number} amount number of entries to traverse\n   *\n   * @returns {Object} object containing traversed entries\n   */",
        "meta": {
            "range": [
                7825,
                8669
            ],
            "filename": "log.js",
            "lineno": 249,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000475",
                "name": "Log#traverse",
                "type": "MethodDefinition",
                "paramnames": [
                    "rootEntries",
                    "amount"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Follow the pointers and load the log into memory for processing",
        "params": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "description": "entry or entries to start from",
                "name": "rootEntries"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "number of entries to traverse",
                "name": "amount"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "object containing traversed entries"
            }
        ],
        "name": "traverse",
        "longname": "Log#traverse",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7909,
                7969
            ],
            "filename": "log.js",
            "lineno": 251,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000482",
                "name": "stack",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stack",
        "longname": "<anonymous>~stack",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7978,
                7992
            ],
            "filename": "log.js",
            "lineno": 252,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000495",
                "name": "traversed",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "traversed",
        "longname": "<anonymous>~traversed",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8001,
                8012
            ],
            "filename": "log.js",
            "lineno": 253,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000499",
                "name": "result",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "<anonymous>~result",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8021,
                8030
            ],
            "filename": "log.js",
            "lineno": 254,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000503",
                "name": "count",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "count",
        "longname": "<anonymous>~count",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8042,
                8181
            ],
            "filename": "log.js",
            "lineno": 256,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000507",
                "name": "addToStack",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "traversed[undefined]": "<anonymous>~traversed.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToStack",
        "longname": "<anonymous>~addToStack",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8145,
                8167
            ],
            "filename": "log.js",
            "lineno": 259,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000530",
                "name": "traversed[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~traversed.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~traversed",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8193,
                8326
            ],
            "filename": "log.js",
            "lineno": 263,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000536",
                "name": "addRootHash",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "result[undefined]": "<anonymous>~result.undefined]",
                "traversed[undefined]": "<anonymous>~traversed.undefined]"
            }
        },
        "undocumented": true,
        "name": "addRootHash",
        "longname": "<anonymous>~addRootHash",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8228,
                8267
            ],
            "filename": "log.js",
            "lineno": 264,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000542",
                "name": "result[undefined]",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "rootEntry.hash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8274,
                8306
            ],
            "filename": "log.js",
            "lineno": 265,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000552",
                "name": "traversed[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~traversed.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~traversed",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8427,
                8447
            ],
            "filename": "log.js",
            "lineno": 272,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000580",
                "name": "hash",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hash",
        "longname": "<anonymous>~hash",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8460,
                8482
            ],
            "filename": "log.js",
            "lineno": 273,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000587",
                "name": "entry",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entry",
        "longname": "<anonymous>~entry",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8526,
                8557
            ],
            "filename": "log.js",
            "lineno": 276,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000601",
                "name": "result[undefined]",
                "type": "MemberExpression",
                "funcscope": "<anonymous>",
                "value": "entry.hash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~result.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~result",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8566,
                8594
            ],
            "filename": "log.js",
            "lineno": 277,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000611",
                "name": "traversed[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~traversed.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~traversed",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Append an entry to the log\n   * @param  {Entry} data Entry to add\n   * @param {Number} pointerCount \"Depth\" of log to traverse\n   * @return {Log}   New Log containing the appended value\n   */",
        "meta": {
            "range": [
                8876,
                10038
            ],
            "filename": "log.js",
            "lineno": 290,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000628",
                "name": "Log#append",
                "type": "MethodDefinition",
                "paramnames": [
                    "data",
                    "pointerCount"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Append an entry to the log",
        "params": [
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "description": "Entry to add",
                "name": "data"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "\"Depth\" of log to traverse",
                "name": "pointerCount",
                "defaultvalue": 1
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "New Log containing the appended value"
            }
        ],
        "name": "append",
        "longname": "Log#append",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8974,
                9056
            ],
            "filename": "log.js",
            "lineno": 292,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000637",
                "name": "newTime",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "newTime",
        "longname": "<anonymous>~newTime",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9061,
                9108
            ],
            "filename": "log.js",
            "lineno": 293,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000659",
                "name": "this._clock",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_clock",
        "longname": "Log#_clock",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9211,
                9271
            ],
            "filename": "log.js",
            "lineno": 296,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000672",
                "name": "nexts",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nexts",
        "longname": "<anonymous>~nexts",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9449,
                9582
            ],
            "filename": "log.js",
            "lineno": 300,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000687",
                "name": "entry",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entry",
        "longname": "<anonymous>~entry",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9594,
                9666
            ],
            "filename": "log.js",
            "lineno": 309,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000709",
                "name": "canAppend",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "canAppend",
        "longname": "<anonymous>~canAppend",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9811,
                9847
            ],
            "filename": "log.js",
            "lineno": 314,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000740",
                "name": "this._entryIndex[undefined]",
                "type": "Identifier",
                "value": "entry",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_entryIndex[undefined]",
        "longname": "Log#_entryIndex[undefined]",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9872,
                9904
            ],
            "filename": "log.js",
            "lineno": 315,
            "columnno": 24,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000756",
                "name": "this._nextsIndex[undefined]",
                "type": "MemberExpression",
                "value": "entry.hash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_nextsIndex[undefined]",
        "longname": "Log#_nextsIndex[undefined]",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9911,
                9932
            ],
            "filename": "log.js",
            "lineno": 316,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000766",
                "name": "this._headsIndex",
                "type": "ObjectExpression",
                "value": "{}",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_headsIndex",
        "longname": "Log#_headsIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9937,
                9973
            ],
            "filename": "log.js",
            "lineno": 317,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000772",
                "name": "this._headsIndex[undefined]",
                "type": "Identifier",
                "value": "entry",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_headsIndex[undefined]",
        "longname": "Log#_headsIndex[undefined]",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Join two logs\n   *\n   * @description Joins two logs returning a new log. Doesn't mutate the original logs.\n   *\n   * @param {Log}    log    Log to join with this Log\n   * @param {Number} size Max size of the joined log\n   *\n   * @example\n   * await log1.join(log2)\n   *\n   * @returns {Promise<Log>} The promise of a new Log\n   */",
        "meta": {
            "range": [
                10383,
                12892
            ],
            "filename": "log.js",
            "lineno": 336,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000788",
                "name": "Log#join",
                "type": "MethodDefinition",
                "paramnames": [
                    "log",
                    "size"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Joins two logs returning a new log. Doesn't mutate the original logs.",
        "params": [
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "Log to join with this Log",
                "name": "log"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "Max size of the joined log",
                "name": "size"
            }
        ],
        "examples": [
            "await log1.join(log2)"
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                },
                "description": "The promise of a new Log"
            }
        ],
        "name": "join",
        "longname": "Log#join",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10578,
                10614
            ],
            "filename": "log.js",
            "lineno": 341,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000820",
                "name": "newItems",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "newItems",
        "longname": "<anonymous>~newItems",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10626,
                10668
            ],
            "filename": "log.js",
            "lineno": 343,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000829",
                "name": "identityProvider",
                "type": "MemberExpression",
                "value": "this._identity.provider"
            }
        },
        "undocumented": true,
        "name": "identityProvider",
        "longname": "<anonymous>~identityProvider",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10785,
                10961
            ],
            "filename": "log.js",
            "lineno": 346,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000837",
                "name": "permitted",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "canAppend": "<anonymous>~permitted~canAppend"
            }
        },
        "undocumented": true,
        "name": "permitted",
        "longname": "<anonymous>~permitted",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": [],
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10828,
                10893
            ],
            "filename": "log.js",
            "lineno": 347,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000843",
                "name": "canAppend",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "canAppend",
        "longname": "<anonymous>~permitted~canAppend",
        "kind": "constant",
        "memberof": "<anonymous>~permitted",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11055,
                11364
            ],
            "filename": "log.js",
            "lineno": 352,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000862",
                "name": "verify",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "isValid": "<anonymous>~verify~isValid",
                "publicKey": "<anonymous>~verify~publicKey"
            }
        },
        "undocumented": true,
        "name": "verify",
        "longname": "<anonymous>~verify",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": [],
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11095,
                11148
            ],
            "filename": "log.js",
            "lineno": 353,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000868",
                "name": "isValid",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "isValid",
        "longname": "<anonymous>~verify~isValid",
        "kind": "constant",
        "memberof": "<anonymous>~verify",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11161,
                11226
            ],
            "filename": "log.js",
            "lineno": 354,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000878",
                "name": "publicKey",
                "type": "ConditionalExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "publicKey",
        "longname": "<anonymous>~verify~publicKey",
        "kind": "constant",
        "memberof": "<anonymous>~verify",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11376,
                11415
            ],
            "filename": "log.js",
            "lineno": 358,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000911",
                "name": "entriesToJoin",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entriesToJoin",
        "longname": "<anonymous>~entriesToJoin",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11459,
                11473
            ],
            "filename": "log.js",
            "lineno": 359,
            "columnno": 43,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000925",
                "name": "concurrency",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "concurrency",
        "longname": "concurrency",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11517,
                11531
            ],
            "filename": "log.js",
            "lineno": 360,
            "columnno": 40,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000934",
                "name": "concurrency",
                "type": "Literal",
                "value": 1
            }
        },
        "undocumented": true,
        "name": "concurrency",
        "longname": "concurrency",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11579,
                11639
            ],
            "filename": "log.js",
            "lineno": 363,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000937",
                "name": "this._entryIndex",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_entryIndex",
        "longname": "Log#_entryIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11698,
                11772
            ],
            "filename": "log.js",
            "lineno": 366,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000950",
                "name": "addToNextsIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "addToNextsIndex",
        "longname": "<anonymous>~addToNextsIndex",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11742,
                11770
            ],
            "filename": "log.js",
            "lineno": 366,
            "columnno": 54,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000962",
                "name": "this._nextsIndex[undefined]",
                "type": "MemberExpression",
                "value": "e.hash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_nextsIndex[undefined]",
        "longname": "<anonymous>#_nextsIndex[undefined]",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11856,
                11902
            ],
            "filename": "log.js",
            "lineno": 370,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100000982",
                "name": "this._length",
                "type": "MemberExpression",
                "value": ".length",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_length",
        "longname": "Log#_length",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11970,
                11987
            ],
            "filename": "log.js",
            "lineno": 374,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001000",
                "name": "tmp",
                "type": "MemberExpression",
                "value": "this.values"
            }
        },
        "undocumented": true,
        "name": "tmp",
        "longname": "<anonymous>~tmp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11994,
                12016
            ],
            "filename": "log.js",
            "lineno": 375,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001006",
                "name": "tmp",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "tmp",
        "longname": "<anonymous>~tmp",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12023,
                12078
            ],
            "filename": "log.js",
            "lineno": 376,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001015",
                "name": "this._entryIndex",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_entryIndex",
        "longname": "Log#_entryIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12085,
                12138
            ],
            "filename": "log.js",
            "lineno": 377,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001026",
                "name": "this._length",
                "type": "MemberExpression",
                "value": ".length",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_length",
        "longname": "Log#_length",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12179,
                12252
            ],
            "filename": "log.js",
            "lineno": 381,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001040",
                "name": "notReferencedByNewItems",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "notReferencedByNewItems",
        "longname": "<anonymous>~notReferencedByNewItems",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12263,
                12313
            ],
            "filename": "log.js",
            "lineno": 382,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001057",
                "name": "notInCurrentNexts",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "notInCurrentNexts",
        "longname": "<anonymous>~notInCurrentNexts",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12324,
                12408
            ],
            "filename": "log.js",
            "lineno": 383,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001070",
                "name": "nextsFromNewItems",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "nextsFromNewItems",
        "longname": "<anonymous>~nextsFromNewItems",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12419,
                12627
            ],
            "filename": "log.js",
            "lineno": 384,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001087",
                "name": "mergedHeads",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "mergedHeads",
        "longname": "<anonymous>~mergedHeads",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12633,
                12663
            ],
            "filename": "log.js",
            "lineno": 389,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001122",
                "name": "this._headsIndex",
                "type": "Identifier",
                "value": "mergedHeads",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_headsIndex",
        "longname": "Log#_headsIndex",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12719,
                12792
            ],
            "filename": "log.js",
            "lineno": 392,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001128",
                "name": "maxClock",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "maxClock",
        "longname": "<anonymous>~maxClock",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12797,
                12872
            ],
            "filename": "log.js",
            "lineno": 393,
            "columnno": 4,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001143",
                "name": "this._clock",
                "type": "NewExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "_clock",
        "longname": "Log#_clock",
        "kind": "member",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "/**\n   * Get the log in JSON format\n   * @returns {Object<{id, heads}>} object with the id of the log and the heads\n   */",
        "meta": {
            "range": [
                13020,
                13110
            ],
            "filename": "log.js",
            "lineno": 401,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001166",
                "name": "Log#toJSON",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Get the log in JSON format",
        "returns": [
            {
                "type": {
                    "names": [
                        "Object.<{id, heads}>"
                    ]
                },
                "description": "object with the id of the log and the heads"
            }
        ],
        "name": "toJSON",
        "longname": "Log#toJSON",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13051,
                13062
            ],
            "filename": "log.js",
            "lineno": 403,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001172",
                "name": "id",
                "type": "MemberExpression",
                "value": "this.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13070,
                13100
            ],
            "filename": "log.js",
            "lineno": 404,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001176",
                "name": "heads",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "heads",
        "longname": "heads",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Get a snapshot of the log\n   * @returns {Object<{id, heads, values}>} object with id, heads, and values array\n   */",
        "meta": {
            "range": [
                13241,
                13349
            ],
            "filename": "log.js",
            "lineno": 412,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001184",
                "name": "Log#toSnapshot",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Get a snapshot of the log",
        "returns": [
            {
                "type": {
                    "names": [
                        "Object.<{id, heads, values}>"
                    ]
                },
                "description": "object with id, heads, and values array"
            }
        ],
        "name": "toSnapshot",
        "longname": "Log#toSnapshot",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13276,
                13287
            ],
            "filename": "log.js",
            "lineno": 414,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001190",
                "name": "id",
                "type": "MemberExpression",
                "value": "this.id"
            }
        },
        "undocumented": true,
        "name": "id",
        "longname": "id",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13295,
                13312
            ],
            "filename": "log.js",
            "lineno": 415,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001194",
                "name": "heads",
                "type": "MemberExpression",
                "value": "this.heads"
            }
        },
        "undocumented": true,
        "name": "heads",
        "longname": "heads",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13320,
                13339
            ],
            "filename": "log.js",
            "lineno": 416,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001198",
                "name": "values",
                "type": "MemberExpression",
                "value": "this.values"
            }
        },
        "undocumented": true,
        "name": "values",
        "longname": "values",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Get the log as a Buffer\n   * @returns {Buffer} Buffer version of stringified log JSON\n   */",
        "meta": {
            "range": [
                13456,
                13527
            ],
            "filename": "log.js",
            "lineno": 424,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001202",
                "name": "Log#toBuffer",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Get the log as a Buffer",
        "returns": [
            {
                "type": {
                    "names": [
                        "Buffer"
                    ]
                },
                "description": "Buffer version of stringified log JSON"
            }
        ],
        "name": "toBuffer",
        "longname": "Log#toBuffer",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * Returns the log entries as a formatted string\n   * @example\n   * two\n   * └─one\n   *   └─three\n   *\n   * @param {Function} payloadMapper transformation function\n   *\n   * @returns {string} plain text representation of the log\n   */",
        "meta": {
            "range": [
                13774,
                14266
            ],
            "filename": "log.js",
            "lineno": 439,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001219",
                "name": "Log#toString",
                "type": "MethodDefinition",
                "paramnames": [
                    "payloadMapper"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Returns the log entries as a formatted string",
        "examples": [
            "two\n└─one\n  └─three"
        ],
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "description": "transformation function",
                "name": "payloadMapper"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "plain text representation of the log"
            }
        ],
        "name": "toString",
        "longname": "Log#toString",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13895,
                13939
            ],
            "filename": "log.js",
            "lineno": 444,
            "columnno": 14,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001244",
                "name": "parents",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "parents",
        "longname": "<anonymous>~parents",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13954,
                13974
            ],
            "filename": "log.js",
            "lineno": 445,
            "columnno": 14,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001255",
                "name": "len",
                "type": "MemberExpression",
                "value": "parents.length"
            }
        },
        "undocumented": true,
        "name": "len",
        "longname": "<anonymous>~len",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13987,
                14028
            ],
            "filename": "log.js",
            "lineno": 446,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001261",
                "name": "padding",
                "type": "NewExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "padding",
        "longname": "<anonymous>~padding",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14037,
                14085
            ],
            "filename": "log.js",
            "lineno": 447,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001274",
                "name": "padding",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "padding",
        "longname": "<anonymous>~padding",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14094,
                14146
            ],
            "filename": "log.js",
            "lineno": 448,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001287",
                "name": "padding",
                "type": "ConditionalExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "padding",
        "longname": "<anonymous>~padding",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "/**\n   * Check whether an object is a Log instance\n   * @param {Object} log An object to check\n   * @returns {true|false} true or false if the object is a log instance\n   */",
        "meta": {
            "range": [
                14446,
                14574
            ],
            "filename": "log.js",
            "lineno": 459,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001319",
                "name": "Log.isLog",
                "type": "MethodDefinition",
                "paramnames": [
                    "log"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Check whether an object is a Log instance",
        "params": [
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "An object to check",
                "name": "log"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "true",
                        "false"
                    ]
                },
                "description": "true or false if the object is a log instance"
            }
        ],
        "name": "isLog",
        "longname": "Log.isLog",
        "kind": "function",
        "memberof": "Log",
        "scope": "static"
    },
    {
        "comment": "/**\n   * Get the log's multihash\n   * @returns {Promise<string>} Multihash of the Log as Base58 encoded string\n   */",
        "meta": {
            "range": [
                14697,
                14767
            ],
            "filename": "log.js",
            "lineno": 469,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001342",
                "name": "Log#toMultihash",
                "type": "MethodDefinition",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "description": "Get the log's multihash",
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<string>"
                    ]
                },
                "description": "Multihash of the Log as Base58 encoded string"
            }
        ],
        "name": "toMultihash",
        "longname": "Log#toMultihash",
        "kind": "function",
        "memberof": "Log",
        "scope": "instance",
        "params": []
    },
    {
        "comment": "/**\n   * On Progress Callback\n   *\n   * @callback onProgressCallback\n   * @param {String} hash\n   * @param {Entry} entry\n   * @param {Number} depth\n   */",
        "meta": {
            "filename": "log.js",
            "lineno": 473,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {}
        },
        "description": "On Progress Callback",
        "kind": "typedef",
        "name": "onProgressCallback",
        "type": {
            "names": [
                "function"
            ]
        },
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "hash"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "name": "entry"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "name": "depth"
            }
        ],
        "longname": "onProgressCallback",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Create a log from multihash\n   *\n   * @param {IPFS}   ipfs        An IPFS instance\n   * @param {AccessController} access AccessController object for the Log\n   * @param {Identity} identity The identity of the owner of the log\n   * @param {string} hash        Multihash (as a Base58 encoded string) to create the log from\n   * @param {Number} length [length=-1] How many items to include in the log\n   * @param {Entry} exclude Entries to ex;lude from the log\n   * @param {onProgressCallback} onProgressCallback On Progress Callback\n   * @return {Promise<Log>} New Log\n   */",
        "meta": {
            "range": [
                15512,
                15980
            ],
            "filename": "log.js",
            "lineno": 494,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001355",
                "name": "Log.fromMultihash",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "hash",
                    "length",
                    "exclude",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a log from multihash",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "AccessController"
                    ]
                },
                "description": "AccessController object for the Log",
                "name": "access"
            },
            {
                "type": {
                    "names": [
                        "Identity"
                    ]
                },
                "description": "The identity of the owner of the log",
                "name": "identity"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Multihash (as a Base58 encoded string) to create the log from",
                "name": "hash"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "[length=-1] How many items to include in the log",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "description": "Entries to ex;lude from the log",
                "name": "exclude"
            },
            {
                "type": {
                    "names": [
                        "onProgressCallback"
                    ]
                },
                "description": "On Progress Callback",
                "name": "onProgressCallback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                },
                "description": "New Log"
            }
        ],
        "name": "fromMultihash",
        "longname": "Log.fromMultihash",
        "kind": "function",
        "memberof": "Log",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                15806,
                15887
            ],
            "filename": "log.js",
            "lineno": 499,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001392",
                "name": "data",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * On Progress Callback\n   *\n   * @callback onProgressCallbackWithParent\n   * @param {String} hash\n   * @param {Entry} entry\n   * @param {Entry} parent\n   * @param {Number} depth\n   */",
        "meta": {
            "filename": "log.js",
            "lineno": 503,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {}
        },
        "description": "On Progress Callback",
        "kind": "typedef",
        "name": "onProgressCallbackWithParent",
        "type": {
            "names": [
                "function"
            ]
        },
        "params": [
            {
                "type": {
                    "names": [
                        "String"
                    ]
                },
                "name": "hash"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "name": "entry"
            },
            {
                "type": {
                    "names": [
                        "Entry"
                    ]
                },
                "name": "parent"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "name": "depth"
            }
        ],
        "longname": "onProgressCallbackWithParent",
        "scope": "global"
    },
    {
        "comment": "/**\n   * Create a log from a single entry's multihash\n   * @param {IPFS}   ipfs        An IPFS instance\n   * @param {AccessController} access AccessController instance for the log\n   * @param {Identity} identity Identity object for the hash\n   * @param {string} hash        Multihash (as a Base58 encoded string) of the Entry from which to create the log from\n   * @param {Number} id   the ID of the new log\n   * @param {Number} [length=-1] How many entries to include in the log\n   * @param {Array<Entry>} exclude entries to exclude from the new log\n   * @param {onProgressCallback} onProgressCallback On Progress Callback\n   * @return {Promise<Log>}      New Log\n   */",
        "meta": {
            "range": [
                16851,
                17299
            ],
            "filename": "log.js",
            "lineno": 525,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001422",
                "name": "Log.fromEntryHash",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "hash",
                    "id",
                    "length",
                    "exclude",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a log from a single entry's multihash",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "AccessController"
                    ]
                },
                "description": "AccessController instance for the log",
                "name": "access"
            },
            {
                "type": {
                    "names": [
                        "Identity"
                    ]
                },
                "description": "Identity object for the hash",
                "name": "identity"
            },
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "description": "Multihash (as a Base58 encoded string) of the Entry from which to create the log from",
                "name": "hash"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "the ID of the new log",
                "name": "id"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "optional": true,
                "defaultvalue": -1,
                "description": "How many entries to include in the log",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "entries to exclude from the new log",
                "name": "exclude"
            },
            {
                "type": {
                    "names": [
                        "onProgressCallback"
                    ]
                },
                "description": "On Progress Callback",
                "name": "onProgressCallback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                },
                "description": "New Log"
            }
        ],
        "name": "fromEntryHash",
        "longname": "Log.fromEntryHash",
        "kind": "function",
        "memberof": "Log",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                17150,
                17235
            ],
            "filename": "log.js",
            "lineno": 530,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001457",
                "name": "data",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Create a log from a Log Snapshot JSON\n   * @param {IPFS} ipfs          An IPFS instance\n   * @param {AccessController} access AccessController instance for the log\n   * @param {Identity} identity Identity object for the hash\n   * @param {Object} json        Log snapshot as JSON object\n   * @param {Number} [length=-1] How many entries to include in the log\n   * @param {Number} timeout number of milliseconds to time out in\n   * @param {onProgressCallback} onProgressCallback On progress callback\n   * @return {Promise<Log>}      New Log\n   */",
        "meta": {
            "range": [
                17859,
                18226
            ],
            "filename": "log.js",
            "lineno": 545,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001480",
                "name": "Log.fromJSON",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "json",
                    "length",
                    "timeout",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a log from a Log Snapshot JSON",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "AccessController"
                    ]
                },
                "description": "AccessController instance for the log",
                "name": "access"
            },
            {
                "type": {
                    "names": [
                        "Identity"
                    ]
                },
                "description": "Identity object for the hash",
                "name": "identity"
            },
            {
                "type": {
                    "names": [
                        "Object"
                    ]
                },
                "description": "Log snapshot as JSON object",
                "name": "json"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "optional": true,
                "defaultvalue": -1,
                "description": "How many entries to include in the log",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "description": "number of milliseconds to time out in",
                "name": "timeout"
            },
            {
                "type": {
                    "names": [
                        "onProgressCallback"
                    ]
                },
                "description": "On progress callback",
                "name": "onProgressCallback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                },
                "description": "New Log"
            }
        ],
        "name": "fromJSON",
        "longname": "Log.fromJSON",
        "kind": "function",
        "memberof": "Log",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                18081,
                18157
            ],
            "filename": "log.js",
            "lineno": 549,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001505",
                "name": "data",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Create a new log from an Entry instance\n   * @param {IPFS}                ipfs          An IPFS instance\n   * @param {AccessController} access AccessController instance for the log\n   * @param {Identity} identity Identity object for the hash\n   * @param {Entry|Array<Entry>} sourceEntries An Entry or an array of entries to fetch a log from\n   * @param {Number}              [length=-1]   How many entries to include. Default: infinite.\n   * @param {Array<Entry|string>} [exclude]     Array of entries or hashes or entries to not fetch (foe eg. cached entries)\n   * @param {onProgressCallback} onProgressCallback On progress callback\n   * @return {Promise<Log>}       New Log\n   */",
        "meta": {
            "range": [
                18923,
                19396
            ],
            "filename": "log.js",
            "lineno": 564,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001529",
                "name": "Log.fromEntry",
                "type": "MethodDefinition",
                "paramnames": [
                    "ipfs",
                    "access",
                    "identity",
                    "sourceEntries",
                    "length",
                    "exclude",
                    "onProgressCallback"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Create a new log from an Entry instance",
        "params": [
            {
                "type": {
                    "names": [
                        "IPFS"
                    ]
                },
                "description": "An IPFS instance",
                "name": "ipfs"
            },
            {
                "type": {
                    "names": [
                        "AccessController"
                    ]
                },
                "description": "AccessController instance for the log",
                "name": "access"
            },
            {
                "type": {
                    "names": [
                        "Identity"
                    ]
                },
                "description": "Identity object for the hash",
                "name": "identity"
            },
            {
                "type": {
                    "names": [
                        "Entry",
                        "Array.<Entry>"
                    ]
                },
                "description": "An Entry or an array of entries to fetch a log from",
                "name": "sourceEntries"
            },
            {
                "type": {
                    "names": [
                        "Number"
                    ]
                },
                "optional": true,
                "defaultvalue": -1,
                "description": "How many entries to include. Default: infinite.",
                "name": "length"
            },
            {
                "type": {
                    "names": [
                        "Array.<(Entry|string)>"
                    ]
                },
                "optional": true,
                "description": "Array of entries or hashes or entries to not fetch (foe eg. cached entries)",
                "name": "exclude"
            },
            {
                "type": {
                    "names": [
                        "onProgressCallback"
                    ]
                },
                "description": "On progress callback",
                "name": "onProgressCallback"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Promise.<Log>"
                    ]
                },
                "description": "New Log"
            }
        ],
        "name": "fromEntry",
        "longname": "Log.fromEntry",
        "kind": "function",
        "memberof": "Log",
        "scope": "static",
        "async": true
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19241,
                19327
            ],
            "filename": "log.js",
            "lineno": 569,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001563",
                "name": "data",
                "type": "AwaitExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "data",
        "longname": "<anonymous>~data",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Find heads from a collection of entries\n   *\n   * @description\n   * Finds entries that are the heads of this collection,\n   * ie. entries that are not referenced by other entries\n   *\n   * @param {Array<Entry>} entries Entries to search heads from\n   * @returns {Array<Entry>} entryHash\n   */",
        "meta": {
            "range": [
                19704,
                20107
            ],
            "filename": "log.js",
            "lineno": 583,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001587",
                "name": "Log.findHeads",
                "type": "MethodDefinition",
                "paramnames": [
                    "entries"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Finds entries that are the heads of this collection,\nie. entries that are not referenced by other entries",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "Entries to search heads from",
                "name": "entries"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "entryHash"
            }
        ],
        "name": "findHeads",
        "longname": "Log.findHeads",
        "kind": "function",
        "memberof": "Log",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19741,
                19895
            ],
            "filename": "log.js",
            "lineno": 584,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001593",
                "name": "indexReducer",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "addToResult": "<anonymous>~indexReducer~addToResult",
                "": null
            }
        },
        "undocumented": true,
        "name": "indexReducer",
        "longname": "<anonymous>~indexReducer",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19794,
                19834
            ],
            "filename": "log.js",
            "lineno": 585,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001602",
                "name": "addToResult",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "res[undefined]": "<anonymous>~indexReducer~addToResult.res[undefined]"
            }
        },
        "undocumented": true,
        "name": "addToResult",
        "longname": "<anonymous>~indexReducer~addToResult",
        "kind": "function",
        "memberof": "<anonymous>~indexReducer",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19814,
                19833
            ],
            "filename": "log.js",
            "lineno": 585,
            "columnno": 30,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001606",
                "name": "res[undefined]",
                "type": "MemberExpression",
                "value": "entry.hash",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "res[undefined]",
        "longname": "<anonymous>~indexReducer~addToResult.res[undefined]",
        "kind": "member",
        "memberof": "<anonymous>~indexReducer~addToResult",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19905,
                19945
            ],
            "filename": "log.js",
            "lineno": 590,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001624",
                "name": "items",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "items",
        "longname": "<anonymous>~items",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                19955,
                19996
            ],
            "filename": "log.js",
            "lineno": 592,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001633",
                "name": "exists",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "exists",
        "longname": "<anonymous>~exists",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20005,
                20051
            ],
            "filename": "log.js",
            "lineno": 593,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001645",
                "name": "compareIds",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "compareIds",
        "longname": "<anonymous>~compareIds",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Find entries that point to another entry that is not in the input array\n   *\n   * @param {Array<Entry>} entries entried to find tails from\n   *\n   * @returns {Array<Entry>} unique tail entries\n   */",
        "meta": {
            "range": [
                20321,
                21853
            ],
            "filename": "log.js",
            "lineno": 605,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001671",
                "name": "Log.findTails",
                "type": "MethodDefinition",
                "paramnames": [
                    "entries"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Find entries that point to another entry that is not in the input array",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "entried to find tails from",
                "name": "entries"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "unique tail entries"
            }
        ],
        "name": "findTails",
        "longname": "Log.findTails",
        "kind": "function",
        "memberof": "Log",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20397,
                20414
            ],
            "filename": "log.js",
            "lineno": 607,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001677",
                "name": "reverseIndex",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "reverseIndex",
        "longname": "<anonymous>~reverseIndex",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20489,
                20503
            ],
            "filename": "log.js",
            "lineno": 609,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001681",
                "name": "nullIndex",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "nullIndex",
        "longname": "<anonymous>~nullIndex",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20560,
                20571
            ],
            "filename": "log.js",
            "lineno": 611,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001685",
                "name": "hashes",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "hashes",
        "longname": "<anonymous>~hashes",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20614,
                20624
            ],
            "filename": "log.js",
            "lineno": 613,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001689",
                "name": "nexts",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "nexts",
        "longname": "<anonymous>~nexts",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20634,
                21135
            ],
            "filename": "log.js",
            "lineno": 615,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001693",
                "name": "addToIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "addToReverseIndex": "<anonymous>~addToIndex~addToReverseIndex",
                "": null,
                "nexts": "<anonymous>~addToIndex~nexts",
                "hashes[undefined]": "<anonymous>~hashes.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToIndex",
        "longname": "<anonymous>~addToIndex",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20733,
                20887
            ],
            "filename": "log.js",
            "lineno": 619,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001714",
                "name": "addToReverseIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "reverseIndex[undefined]": "<anonymous>~reverseIndex.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToReverseIndex",
        "longname": "<anonymous>~addToIndex~addToReverseIndex",
        "kind": "function",
        "memberof": "<anonymous>~addToIndex",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                20827,
                20847
            ],
            "filename": "log.js",
            "lineno": 621,
            "columnno": 30,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001725",
                "name": "reverseIndex[undefined]",
                "type": "ArrayExpression",
                "funcscope": "<anonymous>",
                "value": "[]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~reverseIndex.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~reverseIndex",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21032,
                21060
            ],
            "filename": "log.js",
            "lineno": 628,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001747",
                "name": "nexts",
                "type": "CallExpression",
                "funcscope": "<anonymous>~addToIndex",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "nexts",
        "longname": "<anonymous>~addToIndex~nexts",
        "kind": "member",
        "memberof": "<anonymous>~addToIndex",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21108,
                21129
            ],
            "filename": "log.js",
            "lineno": 630,
            "columnno": 6,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001757",
                "name": "hashes[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~hashes.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~hashes",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21204,
                21285
            ],
            "filename": "log.js",
            "lineno": 636,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001771",
                "name": "addUniques",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "addUniques",
        "longname": "<anonymous>~addUniques",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21294,
                21331
            ],
            "filename": "log.js",
            "lineno": 637,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001787",
                "name": "exists",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "exists",
        "longname": "<anonymous>~exists",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21340,
                21383
            ],
            "filename": "log.js",
            "lineno": 638,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001797",
                "name": "findFromReverseIndex",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "findFromReverseIndex",
        "longname": "<anonymous>~findFromReverseIndex",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                21448,
                21719
            ],
            "filename": "log.js",
            "lineno": 641,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001805",
                "name": "tails",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "tails",
        "longname": "<anonymous>~tails",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Find the hashes to entries that are not in a collection\n   * but referenced by other entries\n   *\n   * @param {Array<Entry>} entries array of entries to find tails in\n   *\n   * @returns {Array<String>} hashes of tail entries\n   */",
        "meta": {
            "range": [
                22099,
                22568
            ],
            "filename": "log.js",
            "lineno": 658,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001836",
                "name": "Log.findTailHashes",
                "type": "MethodDefinition",
                "paramnames": [
                    "entries"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Find the hashes to entries that are not in a collection\nbut referenced by other entries",
        "params": [
            {
                "type": {
                    "names": [
                        "Array.<Entry>"
                    ]
                },
                "description": "array of entries to find tails in",
                "name": "entries"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<String>"
                    ]
                },
                "description": "hashes of tail entries"
            }
        ],
        "name": "findTailHashes",
        "longname": "Log.findTailHashes",
        "kind": "function",
        "memberof": "Log",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22141,
                22152
            ],
            "filename": "log.js",
            "lineno": 659,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001842",
                "name": "hashes",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "hashes",
        "longname": "<anonymous>~hashes",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22161,
                22202
            ],
            "filename": "log.js",
            "lineno": 660,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001846",
                "name": "addToIndex",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "hashes[undefined]": "<anonymous>~addToIndex.undefined]"
            }
        },
        "undocumented": true,
        "name": "addToIndex",
        "longname": "<anonymous>~addToIndex",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22180,
                22201
            ],
            "filename": "log.js",
            "lineno": 660,
            "columnno": 27,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001850",
                "name": "hashes[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~addToIndex.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~addToIndex",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22211,
                22483
            ],
            "filename": "log.js",
            "lineno": 661,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001858",
                "name": "reduceTailHashes",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "addToResult": "<anonymous>~reduceTailHashes~addToResult",
                "": null
            }
        },
        "undocumented": true,
        "name": "reduceTailHashes",
        "longname": "<anonymous>~reduceTailHashes",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22268,
                22412
            ],
            "filename": "log.js",
            "lineno": 662,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001867",
                "name": "addToResult",
                "type": "ArrowFunctionExpression"
            }
        },
        "undocumented": true,
        "name": "addToResult",
        "longname": "<anonymous>~reduceTailHashes~addToResult",
        "kind": "function",
        "memberof": "<anonymous>~reduceTailHashes",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n   * Shows the difference between two logs\n   *\n   * @param {Log} a the first log\n   * @param {Log} b the second log\n   *\n   * @returns {Log} The resultant log\n   */",
        "meta": {
            "range": [
                22744,
                23299
            ],
            "filename": "log.js",
            "lineno": 684,
            "columnno": 2,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001913",
                "name": "Log.difference",
                "type": "MethodDefinition",
                "paramnames": [
                    "a",
                    "b"
                ]
            },
            "vars": {
                "": null
            }
        },
        "description": "Shows the difference between two logs",
        "params": [
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "the first log",
                "name": "a"
            },
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "the second log",
                "name": "b"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Log"
                    ]
                },
                "description": "The resultant log"
            }
        ],
        "name": "difference",
        "longname": "Log.difference",
        "kind": "function",
        "memberof": "Log",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22779,
                22813
            ],
            "filename": "log.js",
            "lineno": 685,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001920",
                "name": "stack",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "stack",
        "longname": "<anonymous>~stack",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22822,
                22836
            ],
            "filename": "log.js",
            "lineno": 686,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001930",
                "name": "traversed",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "traversed",
        "longname": "<anonymous>~traversed",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22845,
                22853
            ],
            "filename": "log.js",
            "lineno": 687,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001934",
                "name": "res",
                "type": "ObjectExpression",
                "value": "{}"
            }
        },
        "undocumented": true,
        "name": "res",
        "longname": "<anonymous>~res",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22865,
                23004
            ],
            "filename": "log.js",
            "lineno": 689,
            "columnno": 10,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001938",
                "name": "pushToStack",
                "type": "ArrowFunctionExpression"
            },
            "vars": {
                "traversed[undefined]": "<anonymous>~traversed.undefined]"
            }
        },
        "undocumented": true,
        "name": "pushToStack",
        "longname": "<anonymous>~pushToStack",
        "kind": "function",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                22968,
                22990
            ],
            "filename": "log.js",
            "lineno": 692,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001963",
                "name": "traversed[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~traversed.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~traversed",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23049,
                23069
            ],
            "filename": "log.js",
            "lineno": 697,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001976",
                "name": "hash",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "hash",
        "longname": "<anonymous>~hash",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23082,
                23101
            ],
            "filename": "log.js",
            "lineno": 698,
            "columnno": 12,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100001983",
                "name": "entry",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "entry",
        "longname": "<anonymous>~entry",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23166,
                23189
            ],
            "filename": "log.js",
            "lineno": 700,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002009",
                "name": "res[undefined]",
                "type": "Identifier",
                "funcscope": "<anonymous>",
                "value": "entry",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~res.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~res",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23198,
                23226
            ],
            "filename": "log.js",
            "lineno": 701,
            "columnno": 8,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002017",
                "name": "traversed[undefined]",
                "type": "Literal",
                "funcscope": "<anonymous>",
                "value": true,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "<anonymous>~traversed.undefined]",
        "kind": "member",
        "memberof": "<anonymous>~traversed",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23303,
                23323
            ],
            "filename": "log.js",
            "lineno": 709,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002035",
                "name": "module.exports",
                "type": "Identifier",
                "value": "Log",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23324,
                23374
            ],
            "filename": "log.js",
            "lineno": 710,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002041",
                "name": "module.exports.AccessController",
                "type": "Identifier",
                "value": "AccessController",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "AccessController",
        "longname": "AccessController",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                23375,
                23425
            ],
            "filename": "log.js",
            "lineno": 711,
            "columnno": 0,
            "path": "/home/mark/Projects/orbitdb/ipfs-log/src",
            "code": {
                "id": "astnode100002049",
                "name": "module.exports.IdentityProvider",
                "type": "Identifier",
                "value": "IdentityProvider",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "IdentityProvider",
        "longname": "IdentityProvider",
        "kind": "member",
        "scope": "global"
    },
    {
        "kind": "package",
        "name": "ipfs-log",
        "longname": "package:ipfs-log",
        "author": "Haad",
        "dependencies": {
            "orbit-db-identity-provider": "^0.0.2",
            "p-map": "^1.1.1",
            "p-whilst": "^1.0.0"
        },
        "description": "Append-only log CRDT on IPFS",
        "devDependencies": {
            "@orbitdb/eslint-config-orbitdb": "0.0.2",
            "babel-cli": "^6.26.0",
            "babel-core": "^6.26.0",
            "babel-loader": "^8.0.2",
            "babel-plugin-transform-runtime": "^6.23.0",
            "babel-preset-env": "^1.6.1",
            "datastore-level": "^0.9.0",
            "eslint": "^5.4.0",
            "eslint-config-standard": "^12.0.0",
            "eslint-plugin-import": "^2.14.0",
            "eslint-plugin-node": "^7.0.1",
            "eslint-plugin-promise": "^4.0.0",
            "eslint-plugin-standard": "^4.0.0",
            "go-ipfs-dep": "~0.4.17",
            "ipfs": "~0.33.0",
            "ipfs-repo": "^0.24.0",
            "ipfsd-ctl": "~0.39.1",
            "istanbul": "^0.4.5",
            "jsdoc": "^3.5.5",
            "mocha": "^5.2.0",
            "orbit-db-keystore": "github:orbitdb/orbit-db-keystore#fix/verification",
            "rimraf": "^2.6.1",
            "uglifyjs-webpack-plugin": "~1.3.0",
            "webpack": "^3.10.0"
        },
        "engines": {
            "node": ">=8.0.0"
        },
        "files": [
            "/home/mark/Projects/orbitdb/ipfs-log/src/log.js"
        ],
        "licenses": [
            {
                "type": "MIT"
            }
        ],
        "main": "src/log.js",
        "repository": {
            "type": "git",
            "url": "https://github.com/orbitdb/ipfs-log"
        },
        "version": "4.2.0"
    }
]
